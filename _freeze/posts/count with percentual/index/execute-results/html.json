{
  "hash": "19934348480f24dfe305cede8bde2986",
  "result": {
    "markdown": "---\ntitle: \"count e percentuais\"\nauthor: \"Marcos Abreu\"\ndate: \"2022-10-10\"\ncategories: [R]\n---\n\n\nO método _count_ do pacote _dplyr_ é um dos que mais utilizo durante o trabalho de _data wrangling_.     \n\nUma das coisas que gosto de fazer é acrescentar uma coluna com valores percentuais:    \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\n\npenguins %>% \n  count(species, sort = T) %>% \n  mutate(percent = scales::percent(n/sum(n)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 3\n  species       n percent\n  <fct>     <int> <chr>  \n1 Adelie      152 44.2%  \n2 Gentoo      124 36.0%  \n3 Chinstrap    68 19.8%  \n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}