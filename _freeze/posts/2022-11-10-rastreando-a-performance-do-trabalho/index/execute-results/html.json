{
  "hash": "67b409231d660fea039f147b1bd2e2fc",
  "result": {
    "markdown": "---\ntitle: \"Rastreando a performance do trabalho\"\ndescription: \"Esta técnica ajuda a visualizar a expectativa para término do trabalho.\"\ndate: 2022-11-10\nauthor: \n  - name: Marcos Abreu\n    url: https://abreums.github.io\n    orcid: 0000-0003-4772-7955\ncitation:\n  type: post-weblog\n  url: https://abreums.github.io/posts/2019-11-10-rastreando-a-performance-do-trabalho/\n  language: pt-br\nimage: stream_diagram.png\ncategories: [News]\n---\n\n\nQuando você trabalho como gerente de projetos a pergunta mais importante que você deve estar preparado para responder é: \"Quando acaba?\".\n\nA vantagem de se estimar a data de término é que esta envolve subjetivamente informações sobre benefícios, que se realizam com a disponibilização do resultado esperado. Mas ao contrário de outros fatores - como custo, efetividade do trabalho, ou qualidade do produto - a estimativa do prazo final, em geral é feita a partir de medições sobre o escopo.\n\nTomemos, por exemplo, a técnica mais conhecida que é a *Análise do Valor Agregado.* Ela considera a estimativa do prazo final através do cálculo do escopo do trabalho, e por este motivo, a pode gerar distorções nas medições de performance.\n\nPodemos verificar isto através das equações utilizadas para calcular o índice de performance do custo (**CPI** - *Cost Performance Index*), e o índice de performance do prazo (**SPI** - *Schedule Performance Index*).\n\nO **CPI** é calculado através da razão entre o Valor Agregado (**EV** - *Earned Value*) e o Custo Real (**AC** - *Actual Cost*). Se considerarmos um projeto com valor de R\\$ 100 mil com custo final de R\\$ 200 mil (o dobro), o índice reflete isto indicando uma performance de 50%:\n\n$$\n\\begin{align}\nCPI &= \\frac{EV}{AC} \\\\\n    &= \\frac{100.000}{200.000} \\\\\n    &= 0.5 \\\\\n    &= 50\\%\n\\end{align}\n$$\n\nJá o **SPI** é calculado através da razão entre o Valor Agregado e o Valor Planejado (**PV** - _Planned Value_). Se o mesmo projeto tivesse durado o dobro do tempo:\n\n$$\n\\begin{align}\nSPI &= \\frac{EV}{PV} \\\\\n    &= \\frac{100.000}{100.000} \\\\\n    &= 1 \\\\\n    &= 100\\%\n\\end{align}\n$$\nIsso mesmo, o SPI seria de 100%. Isto acontece porque a fórmula não mede prazo (_schedule_), ela mede escopo ao comparar o escopo entregue (Valor Agregado) contra o escopo planejado (Valor Planejado).\n\n## Como estimar o prazo de término de um projeto\n\nUma forma de conseguir estimar o prazo de entrega do projeto é através de um gráfico de tendências de entregas intermediárias.\n\nPrimeiro vamos construir o gráfico e depois analisar o que é preciso fazer para\n\n\n::: {.cell}\n\n:::\n\n\nO gráfico:\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| warning: false\n#| message: false\n\n# using the function from @Marcelo from this link \n# https://stackoverflow.com/questions/43625341/reverse-datetime-posixct-data-axis-in-ggplot \n# to invert the data axis: \nlibrary(scales) # for as.trans\nlibrary(ggtext) # for markdown\nlibrary(grid) # arrow\nc_trans <- function(a, b, breaks = b$breaks, format = b$format) {\n  a <- as.trans(a)\n  b <- as.trans(b)\n\n  name <- paste(a$name, b$name, sep = \"-\")\n\n  trans <- function(x) a$trans(b$trans(x))\n  inv <- function(x) b$inverse(a$inverse(x))\n\n  trans_new(name, trans, inverse = inv, breaks = breaks, format=format)\n}\nrev_date <- c_trans(\"reverse\", \"time\")\n\ny_breaks <- entregas %>% distinct(status) %>% arrange(status) %>% pull() %>% as.POSIXct.Date()\n\nm_labels <- entregas %>% filter(status <= min(status)) %>% mutate(status = as.POSIXct.Date(status - 2), previsto = as.POSIXct.Date(previsto + 3))\n\nentregas %>% \n  mutate(status = as.POSIXct.Date(status),\n         previsto = as.POSIXct.Date(previsto)) %>% \n  ggplot(aes(x = previsto, y = status, group = milestone, colour = milestone)) +\n  geom_point() +\n  geom_line() +\n  geom_text(data = m_labels, aes(x = previsto, y = status, label = milestone)) +\n  scale_y_continuous(trans = rev_date, breaks = y_breaks, labels = scales::date_format()) +\n  labs(title = \"Previsão das Entregas\",\n       x = NULL,\n       y = NULL) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    plot.title = element_markdown(lineheight = 1.1),\n    axis.text.x = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_blank(),\n    panel.grid.major.y = element_line(arrow = arrow(angle = 20, length = unit(0.1, \"inches\"), type = \"closed\"))\n  ) \n```\n````\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\nO eixo y deste gráfico representa as diversas datas de status do projeto, enquanto o eixo x representa a data prevista ou realizada de uma entrega na referida data de status. \n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}