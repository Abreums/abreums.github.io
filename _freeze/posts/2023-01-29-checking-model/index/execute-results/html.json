{
  "hash": "a55ec9ced41f5340c545fb73998077fb",
  "result": {
    "markdown": "---\ntitle: \"Validando um modelo e sua adequação usando dados falsos\"\ndescription: \"Procedimento para validar a adequação de um modelo baseado em dados falsos\"\ndate: 2023-01-29\nauthor: \n  - name: Marcos Abreu\n    url: https://abreums.github.io\n    orcid: 0000-0003-4772-7955\ncitation:\n  type: post-weblog\n  url: https://abreums.github.io/posts/2023-01-29-checking-model/\n  language: pt-br\ncategories: [News]\n---\n\n\nVamos validar um modelo e sua adequação utilizando dados falsos.\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| warning: false\n#| error: false\n#| message: false\n\n# Packages\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(rosdata)\n```\n````\n:::\n\n\nVamos utilizar os mesmos dados criados no [post anterior](https://abreums.github.io/2023-01-25-linear-regression).\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nVamos gerar dados aleatórios dentro de uma distribuição normal, utilizando os parâmetros da regressão realizada anteriormente.\n\nOu seja, possíveis pontos da nossa distribuição seriam y = 3.04392004184896x + 46.2782927623648+/- sigma = 3.89024196510643.\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| warning: false\n#| error: false\n#| message: false\nx = hibbs$growth\nn = length(x)\ny = my_slope * x + my_intercept + rnorm(n, 0, my_sigma)\nfake_data = tibble(\n  vote = y,\n  growth = x\n)\nfake_data\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 16 × 2\n    vote growth\n   <dbl>  <dbl>\n 1  59.7   2.4 \n 2  48.2   2.89\n 3  47.5   0.85\n 4  63.2   4.21\n 5  50.2   3.02\n 6  61.5   3.62\n 7  52.0   1.08\n 8  48.1  -0.39\n 9  55.1   3.86\n10  49.4   2.27\n11  47.1   0.38\n12  43.4   1.04\n13  51.6   2.36\n14  51.9   1.72\n15  48.2   0.1 \n16  54.0   0.95\n```\n:::\n:::\n\n\nO próximo paso é ajustar uma regressão linear para estes dados.\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| warning: false\n#| error: false\n#| message: false\n\n# Primeiro passo é definir um modelo\nlm_spec <- linear_reg() %>%\n  set_mode(\"regression\") %>%\n  set_engine(\"stan\")\n\n# Segundo passo é ajustar o modelo\nlm_fit <- fit(lm_spec, vote ~ growth, data = fake_data)\nlm_fit\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\nparsnip model object\n\nstan_glm\n family:       gaussian [identity]\n formula:      vote ~ growth\n observations: 16\n predictors:   2\n------\n            Median MAD_SD\n(Intercept) 46.9    1.8  \ngrowth       2.7    0.8  \n\nAuxiliary parameter(s):\n      Median MAD_SD\nsigma 4.3    0.8   \n\n------\n* For help interpreting the printed output see ?print.stanreg\n* For info on the priors used see ?prior_summary.stanreg\n```\n:::\n:::\n\n\nÉ isto.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}