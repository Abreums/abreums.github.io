{
  "hash": "700854b6c83b26cd72f05d6c83675c85",
  "result": {
    "markdown": "---\ntitle: \"Estimadores\"\nauthor: \"Marcos Abreu\"\ndate: \"2021-06-10\"\ncategories: [stat]\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6      ✔ purrr   0.3.4 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.2      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n:::\n\n\n\nVamos definir uma função que implementa o seguinte estimador para a média de uma distribuição:\n\n$$\n\\tilde{Y} =  \\frac{1}{n-1} \\sum_{i = 1}^{n}Y_i\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# defined estimator of Y_tilde\nY_tilde <- function(y) {\n  (1/(length(y)-1))*sum(y)\n}\n\n# get 5 observations from N(10,25)\nobservations <- rnorm(5, mean = 10, sqrt(25))\nY_tilde(observations)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 11.16919\n```\n:::\n\n```{.r .cell-code}\n# repeat 10000 times\nset.seed(123)\nest_bias <- replicate(10000, Y_tilde(rnorm(5, mean = 10, sqrt(25))))\n\ndf <- tibble(est_bias = est_bias)\ndf %>% \n  ggplot(aes(x = est_bias)) +\n  geom_histogram() +\n  geom_vline(xintercept = 10, color = \"red\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\nVamos repetir o exercício com amostrar maiores de 1000 elementos por amostra:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# repeat 10000 times para amostras de tamanho 1000\nset.seed(123)\nest_bias <- replicate(10000, Y_tilde(rnorm(1000, mean = 10, sqrt(25))))\n\ndf <- tibble(est_bias = est_bias)\ndf %>% \n  ggplot(aes(x = est_bias)) +\n  geom_histogram() +\n  geom_vline(xintercept = 10, color = \"red\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\nExemplo - Eficiência de um Estimador\n\nUm estimador é eficiente se os pesos somados resultam em 1.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ny_tilde1 <- function(y) {\n  (1/length(y))*sum(y)\n}\nset.seed(123)\nest_bar1 <- replicate(10000, y_tilde1(rnorm(100, mean = 5, sqrt(10))))\ndf <- tibble(est_bias = est_bar1)\ndf %>% \n  ggplot(aes(x = est_bias)) +\n  geom_histogram() +\n  geom_vline(xintercept = 5, color = \"red\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\nvar(est_bar1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.09953755\n```\n:::\n:::\n\n\nUsando pesos diferentes para os 50 primeiros e 50 últimos.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn = 100\nw = c(rep((1+0.5)/n, n/2), rep((1-0.5)/n, n/2))\n\ny_tilde2 <- function(y) {\n  sum(w*y)\n}\n\nest_tilde2 <- replicate(10000, expr = y_tilde2(rnorm(100, mean = 5, sqrt(10))))\ndf <- tibble(est_bias = est_tilde2)\ndf %>% \n  ggplot(aes(x = est_bias)) +\n  geom_histogram() +\n  geom_vline(xintercept = 5, color = \"red\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\nvar(est_tilde2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.1248949\n```\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}