{
  "hash": "72eeaa615a20b41cb178e284f0f322d2",
  "result": {
    "markdown": "---\ntitle: \"Regressão Linear\"\ndescription: \"Conceitos básicos para regressão linear\"\ndate: 2021-04-16\nauthor: \n  - name: Marcos Abreu\n    url: https://abreums.github.io\n    orcid: 0000-0003-4772-7955\ncitation:\n  type: post-weblog\n  url: https://abreums.github.io/posts/2021-04-16-regressao-linear/\n  language: pt-br\ncategories: [Rstat]\n---\n\n\nOs principais conceitos de regressão linear são:\n- asd\n- as\n- asdfa\n\nVamos a alguns exemplos...\n\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| warning: false\n#| message: false\nlibrary(tidyverse)\nlibrary(mlbench)\ndata(\"BostonHousing2\")\nBostonHousing2 %>% glimpse()\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 506\nColumns: 19\n$ town    <fct> Nahant, Swampscott, Swampscott, Marblehead, Marblehead, Marble…\n$ tract   <int> 2011, 2021, 2022, 2031, 2032, 2033, 2041, 2042, 2043, 2044, 20…\n$ lon     <dbl> -70.9550, -70.9500, -70.9360, -70.9280, -70.9220, -70.9165, -7…\n$ lat     <dbl> 42.2550, 42.2875, 42.2830, 42.2930, 42.2980, 42.3040, 42.2970,…\n$ medv    <dbl> 24.0, 21.6, 34.7, 33.4, 36.2, 28.7, 22.9, 27.1, 16.5, 18.9, 15…\n$ cmedv   <dbl> 24.0, 21.6, 34.7, 33.4, 36.2, 28.7, 22.9, 22.1, 16.5, 18.9, 15…\n$ crim    <dbl> 0.00632, 0.02731, 0.02729, 0.03237, 0.06905, 0.02985, 0.08829,…\n$ zn      <dbl> 18.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.5, 12.5, 12.5, 12.5, 12.5, 1…\n$ indus   <dbl> 2.31, 7.07, 7.07, 2.18, 2.18, 2.18, 7.87, 7.87, 7.87, 7.87, 7.…\n$ chas    <fct> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ nox     <dbl> 0.538, 0.469, 0.469, 0.458, 0.458, 0.458, 0.524, 0.524, 0.524,…\n$ rm      <dbl> 6.575, 6.421, 7.185, 6.998, 7.147, 6.430, 6.012, 6.172, 5.631,…\n$ age     <dbl> 65.2, 78.9, 61.1, 45.8, 54.2, 58.7, 66.6, 96.1, 100.0, 85.9, 9…\n$ dis     <dbl> 4.0900, 4.9671, 4.9671, 6.0622, 6.0622, 6.0622, 5.5605, 5.9505…\n$ rad     <int> 1, 2, 2, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4,…\n$ tax     <int> 296, 242, 242, 222, 222, 222, 311, 311, 311, 311, 311, 311, 31…\n$ ptratio <dbl> 15.3, 17.8, 17.8, 18.7, 18.7, 18.7, 15.2, 15.2, 15.2, 15.2, 15…\n$ b       <dbl> 396.90, 396.90, 392.83, 394.63, 396.90, 394.12, 395.60, 396.90…\n$ lstat   <dbl> 4.98, 9.14, 4.03, 2.94, 5.33, 5.21, 12.43, 19.15, 29.93, 17.10…\n```\n:::\n:::\n\n\nO dicionário de dados está disponível no help do R.     \n\nNesta análise vamos comparar o número de habitações por residência (*rm*) e o valor médio das casas (*medv*).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBostonHousing2 %>% \n  ggplot(aes(x = rm, y = medv)) +\n  geom_point(alpha = 0.2) +\n  scale_y_continuous(expand = expansion(mult = 0.1)) +\n  theme_linedraw() +\n  labs(\n    title = \"Valor médio das casas pelo número de quartos\"\n  ) +\n  theme(axis.ticks = element_blank(),\n        axis.title = element_blank())\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nA base *diamonds* do pacote ggplot2 traz as seguintes informações:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndiamonds %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 53,940\nColumns: 10\n$ carat   <dbl> 0.23, 0.21, 0.23, 0.29, 0.31, 0.24, 0.24, 0.26, 0.22, 0.23, 0.…\n$ cut     <ord> Ideal, Premium, Good, Premium, Good, Very Good, Very Good, Ver…\n$ color   <ord> E, E, E, I, J, J, I, H, E, H, J, J, F, J, E, E, I, J, J, J, I,…\n$ clarity <ord> SI2, SI1, VS1, VS2, SI2, VVS2, VVS1, SI1, VS2, VS1, SI1, VS1, …\n$ depth   <dbl> 61.5, 59.8, 56.9, 62.4, 63.3, 62.8, 62.3, 61.9, 65.1, 59.4, 64…\n$ table   <dbl> 55, 61, 65, 58, 58, 57, 57, 55, 61, 61, 55, 56, 61, 54, 62, 58…\n$ price   <int> 326, 326, 327, 334, 335, 336, 336, 337, 337, 338, 339, 340, 34…\n$ x       <dbl> 3.95, 3.89, 4.05, 4.20, 4.34, 3.94, 3.95, 4.07, 3.87, 4.00, 4.…\n$ y       <dbl> 3.98, 3.84, 4.07, 4.23, 4.35, 3.96, 3.98, 4.11, 3.78, 4.05, 4.…\n$ z       <dbl> 2.43, 2.31, 2.31, 2.63, 2.75, 2.48, 2.47, 2.53, 2.49, 2.39, 2.…\n```\n:::\n:::\n\nSão 10 variáveis de 54 mil diamantes incluindo preço, cor, carat (medida de peso), qualidade do corte, etc.     \n\nA relação entre preço e carat é mostrada no gráfico a seguir.     \n\n::: {.cell}\n\n```{.r .cell-code}\ndiamonds %>% \n  ggplot(aes(x = carat, y = price)) +\n  geom_hex() +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![Preço é função de carat](index_files/figure-html/price-carat-1.png){width=672}\n:::\n:::\n\nA @price-carac não mostra uma relação linear entre as variáveis preço e carac. Mas é possível modificar isto utilizando o logarítmo dos valores, conforme mostrado na @log-proce-carac.     \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndiamonds %>% \n  ggplot(aes(x = log10(carat), y = log10(price))) +\n  geom_hex(bin = 50) +\n  theme_linedraw()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Ignoring unknown parameters: bin\n```\n:::\n\n::: {.cell-output-display}\n![logarítmo de preço e carac](index_files/figure-html/log-price-carac-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}