{
  "hash": "6aa616da5ca9b6db0223cb9cc18f0544",
  "result": {
    "markdown": "---\ntitle: \"Estimating the number of bugs\"\ndescription: \"How to estimate the number of bugs in a software deploy\"\ndate: 2022-11-02\nauthor: \n  - name: Marcos Abreu\n    url: https://abreums.github.io\n    orcid: 0000-0003-4772-7955\ncitation:\n  type: post-weblog\n  url: https://abreums.github.io/posts/2022-11-02-estimating-number-of-bugs/\n  language: en\nbibliography: https://api.citedrive.com/bib/092b439a-22cd-422b-9913-a61b66c8505d/references.bib?x=eyJpZCI6ICIwOTJiNDM5YS0yMmNkLTQyMmItOTkxMy1hNjFiNjZjODUwNWQiLCAidXNlciI6ICI4MjAiLCAic2lnbmF0dXJlIjogImNlMjYyNmViZmU5MjJlYTcyYmM2YjViOWZkMmE4ZDA0ZWIxMjRiYzA3M2RhY2RlNmUwNzJjODljNmY4ZWY3ZWMifQ==/bibliography.bib\ncategories: [Rstats, Gest√£o]\n---\n\n\nConsider the following situation:\n\nFor a software version 3 different testers found each one a different number of bugs in the system, but a total of 10 different bugs.\n\nTester 1 found bugs number 1, 2, 3, 4, and 5.\n\nTester 2 found bugs number 3, 5, 6, and 7 (two of the same bugs of Tester1, plus two other bugs not found by Tester 1).\n\nTester 3 found bugs 1, 3, 5, 8, 9, and 10.\n\nConsider each bug is equally difficult/easy to be found.\n\nThe 3 testers worked in an independent way. And they are equally efficient.\n\nHow many bugs could we estimate exist in this version of the system?\n\n------------------------------------------------------------------------\n\nTo solve this question let's use the Mark and Capture strategy for estimation of populations as described by [@WikipediaUnknownMark:8f76].\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(Rcapture)\n\nbugs <- matrix(c(1,1,1,1,1,0,0,0,0,0,\n                 0,0,1,0,1,1,1,0,0,0,\n                 1,0,1,0,1,0,0,1,1,1), \n               ncol = 3)\n\nclosedp(bugs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nNumber of captured units: 10 \n\nAbundance estimations and model fits:\n              abundance  stderr deviance df    AIC    BIC    infoFit\nM0                 13.1     3.1    6.781  5 23.614 24.219         OK\nMt                 12.9     3.0    6.128  3 26.961 28.172         OK\nMh Chao (LB)       26.3    20.9    2.472  4 21.305 22.213 warning #1\nMh Poisson2       115.9   237.3    2.472  4 21.305 22.213 warning #1\nMh Darroch        696.0  2253.0    2.472  4 21.305 22.213 warning #1\nMh Gamma3.5      4565.3 19853.4    2.472  4 21.305 22.213 warning #1\nMth Chao (LB)      25.6    20.0    1.708  2 24.541 26.053 warning #1\nMth Poisson2      113.6   232.5    1.708  2 24.541 26.053 warning #1\nMth Darroch       699.7  2266.0    1.708  2 24.541 26.053 warning #1\nMth Gamma3.5     4714.8 20515.0    1.708  2 24.541 26.053 warning #1\nMb                 16.7    13.7    6.526  4 25.359 26.267         OK\nMbh                 1.0    13.6    5.751  3 26.584 27.795 warning #1\n```\n:::\n:::\n\n\nWe can estimate a number of 13 + 3 \\* stderr bugs, which is approximately 22 bugs.\n\n## Reference\n\n::: {#refs}\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}