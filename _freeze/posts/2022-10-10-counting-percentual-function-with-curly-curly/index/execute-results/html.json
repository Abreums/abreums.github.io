{
  "hash": "46e6f49756cfbc6c163d40af2fce55a4",
  "result": {
    "markdown": "---\ntitle: \"Counting percentual function with curly-curly\"\ndescription: \"Rstat - Counting percentual function with curly-curly\"\ndate: 2020-10-10\nauthor: \n  - name: Marcos Abreu\n    url: https://abreums.github.io\n    orcid: 0000-0003-4772-7955\ncitation:\n  type: post-weblog\n  url: https://abreums.github.io/posts/2022-10-10-counting-percentual-function-with-curly-curly/\n  language: pt-br\nimage: \"count_percent.png\"\ncategories: [Rstat]\n---\n\n::: {.cell}\n\n:::\n\n\nThe *count* function from *dplyr* package is one of my favorites for *data wrangling*.\n\nI like to include a percent column to the function results.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>% \n  count(species, sort = T) %>% \n  mutate(percent = scales::percent(n/sum(n), scale = 100))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 3\n  species       n percent\n  <fct>     <int> <chr>  \n1 Adelie      152 44.2%  \n2 Gentoo      124 36.0%  \n3 Chinstrap    68 19.8%  \n```\n:::\n:::\n\n\nWhenever more than one column will be counted it is nice to write a small function for that.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncount_percent <- function(df, a_column) {\n  df %>% \n    count({{a_column}}) %>% \n    mutate(percent = scales::percent(n/sum(n), scale = 100))\n}\n\npenguins %>% \n  count_percent(species)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 3\n  species       n percent\n  <fct>     <int> <chr>  \n1 Adelie      152 44.2%  \n2 Chinstrap    68 19.8%  \n3 Gentoo      124 36.0%  \n```\n:::\n\n```{.r .cell-code}\npenguins %>% \n  count_percent(island)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 3\n  island        n percent\n  <fct>     <int> <chr>  \n1 Biscoe      168 49%    \n2 Dream       124 36%    \n3 Torgersen    52 15%    \n```\n:::\n:::\n\n\nPara esta função funcionar é preciso utilizar o operador curly-curly*.*\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}