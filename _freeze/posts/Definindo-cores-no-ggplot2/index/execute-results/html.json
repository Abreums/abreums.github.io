{
  "hash": "5d446adf5cf2b488f3eff576d4993c3b",
  "result": {
    "markdown": "---\ntitle: \"Definindo Cores no ggplo2\"\nauthor: \"Marcos Abreu\"\ndate: \"2022-10-26\"\ncategories: [Rstat]\n---\n\n\nSeguindo a regra de que se vc tiver que explicar alguma coisa mais de 3 vezes, então você deve escrever um post sobre o assunto. E considerando que neste caso, estou explicando para mim mesmo como definir cores no ggplo2, achei melhor escrever este post para me ajudar a lembrar destas informações na próxima vez que precisar delas.\n\nEstou usando este [site](https://htmlcolorcodes.com) para buscar os códigos das cores. Vou utilizar a seguintes cores:\n\n![palette1](./palette1.png)\n\n## Definindo funções para lidar com cores\n\nVamos definir uma função para lidar com as cores que desejamos.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nminhas_cores <- function(...) {\n  cores <- c(\n    \"laranja\" = \"#e59866\",\n    \"cinza\" = \"#979a9a\",\n    \"azul\" = \"#1b2631\",\n    \"vermelho\" = \"#641e16\",\n    \"agua\" = \"#d1f2eb\",\n    \"amarelo\" = \"#fcf3cf\"\n  )\n  cols <- c(...)\n  \n  if (is.null(cols))\n    return (cores)\n  \n  cores[cols]\n}\n```\n:::\n\n\nA função acima permite acesso às cores:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nminhas_cores(\"vermelho\", \"amarelo\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n vermelho   amarelo \n\"#641e16\" \"#fcf3cf\" \n```\n:::\n:::\n\n\nPodemos criar conjuntos diferentes de paletas de cores a partir das cores definidas na função *minhas_cores*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nminhas_paletas <- function(palette = \"main\", ...) {\n  minhas_paletas <- list(\n    \"main\" = minhas_cores(\"laranja\", \"cinza\", \"vermelho\", \"amarelo\"),\n    \"highlight\" = minhas_cores(\"agua\", \"azul\", \"amarelo\")\n  )\n  minhas_paletas[[palette]]\n}\n```\n:::\n\n\nIsto permite selecionar um subgrupo de cores:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nminhas_paletas(\"main\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  laranja     cinza  vermelho   amarelo \n\"#e59866\" \"#979a9a\" \"#641e16\" \"#fcf3cf\" \n```\n:::\n:::\n\n\nPodemos usar a função *scales::show_col* para mostrar as cores de uma paleta:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nscales::show_col(minhas_paletas(\"main\"), cex_label = 2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n## Usando as cores\n\nVamos utilizar as cores em alguns gráficos.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6      ✔ purrr   0.3.4 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.2      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\n\npenguins <- palmerpenguins::penguins\n\npenguins %>% \n  count(species) %>% \n  ggplot(aes(x = species, y = n)) +\n  geom_col(fill = minhas_cores(\"laranja\")) +\n  labs(title = \"Contagem de espécies\") +\n  scale_y_continuous(expand = expansion(mult = c(0,0.1))) +\n  theme_linedraw() +\n  theme(axis.ticks = element_blank(),\n        axis.title = element_blank(),\n        panel.grid.major.x = element_blank())\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nPodemos usar diferentes cores para cada espécie de pinguim.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>%\n  count(species) %>% \n  ggplot(aes(x = species, y = n, fill = species)) + \n  geom_col() +\n  scale_fill_manual(values = unname(c(minhas_cores(\"laranja\", \"cinza\", \"amarelo\")))) +\n  labs(title = \"Contagem de espécies\") +\n  scale_y_continuous(expand = expansion(mult = c(0,0.1))) +\n  theme_linedraw() +\n  theme(axis.ticks = element_blank(),\n        axis.title = element_blank(),\n        panel.grid.major.x = element_blank())\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nOu podemos associar cores às espécies. Para isso precisaríamos de um vetor nomeado com os nomes das espécies e os códigos das cores.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins_colors <- minhas_cores(\"laranja\", \"azul\", \"vermelho\")\npenguins_colors <- setNames(penguins_colors, c(\"Adelie\", \"Chinstrap\", \"Gentoo\"))\npenguins_colors\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Adelie Chinstrap    Gentoo \n\"#e59866\" \"#1b2631\" \"#641e16\" \n```\n:::\n:::\n\n\ne utilizar iste array com a função *scale_fill_manual*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>% \n  count(species) %>% \n  ggplot(aes(x = species, y = n, fill = species)) +\n  geom_col() +\n  scale_fill_manual(values = penguins_colors) +\n  labs(title = \"Contagem de espécies\") +\n  scale_y_continuous(expand = expansion(mult = c(0,0.1))) +\n  theme_linedraw() +\n  theme(axis.ticks = element_blank(),\n        axis.title = element_blank(),\n        panel.grid.major.x = element_blank())\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nTambém é possível gerar novas paletas com um número maior de cores geradas por interpolação através da função *colorRampPalette*. A função *colorRampPalette* devolve uma função para a qual passaremos o número de cores que gostaríamos de gerar a partir da interpolação das cores da paleta fornecida.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nscales::show_col(colorRampPalette(minhas_paletas(\"main\"))(12), cex_label = 1)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}