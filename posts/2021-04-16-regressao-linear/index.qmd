---
title: "Regressão Linear com tidymodels"
description: "Conceitos básicos para regressão linear e tidymodels"
date: 2022-05-16
author: 
  - name: Marcos Abreu
    url: https://abreums.github.io
    orcid: 0000-0003-4772-7955
citation:
  type: post-weblog
  url: https://abreums.github.io/posts/2022-05-16-regressao-linear/
  language: pt-br
categories: [Rstat]
---

```{r setup}
#| echo: fenced
#| warning: false
#| message: false

library(tidyverse)
library(tidymodels)
library(performance)
```

A base *diamonds* do pacote ggplot2 traz as seguintes informações:

```{r}
#| echo: fenced
#| warning: false
#| message: false
diamonds %>% 
  glimpse()
```
São 10 variáveis de 54 mil diamantes incluindo preço, cor, carat (medida de peso), qualidade do corte, etc.     

A relação entre preço e carat é mostrada no gráfico a seguir.     
```{r}
#| echo: fenced
#| warning: false
#| message: false
#| label: price-carat
#| fig-cap: "Preço é função de carat"
diamonds %>% 
  ggplot(aes(x = carat, y = price)) +
  geom_hex() +
  theme_minimal()
```
A @price-carac não mostra uma relação linear entre as variáveis preço e carac. Mas é possível modificar isto utilizando o logarítmo dos valores, conforme mostrado na @log-proce-carac.     

```{r}
#| echo: fenced
#| warning: false
#| message: false
#| label: log-price-carat
#| fig-cap: "Logarítmo de preço e carat"
diamonds %>% 
  ggplot(aes(x = log10(carat), y = log10(price))) +
  geom_hex(bins = 50) +
  theme_linedraw()
  
```

Utilizando o pacote _tidymodels_ o primeiro passo é especificar o modelo que desejamos utilizar.

```{r}
#| echo: fenced
#| warning: false
#| message: false
lm_spec <- 
  linear_reg() %>% 
  set_mode("regression") %>% 
  set_engine("lm")

```

O segundo passo é adequar o modelo.     

```{r}
lm_fit <- fit(lm_spec, price ~ carat, data = diamonds) 

lm_fit %>% 
  summary()
```

Por fim, podemos validar o modelo.

```{r}
lm_fit %>% 
  performance::check_model()
```


```{r}
lm_fit %>% 
  extract_fit_engine() %>%
  check_heteroscedasticity()
```


O resultado da regressão linear fornece 4 gráficos que nos ajudam a avaliar a regressão obtida:

### 1. Linearidade

```{r}
plot(lm_diamonds, which = 1)
```

### 2. Homocedasticidade

```{r}
plot(lm_diamonds, which = 3)
```
### 3. Normalidade

```{r}
plot(lm_diamonds, which = 2)
```



