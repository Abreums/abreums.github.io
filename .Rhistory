date_style = "m_day_year") %>%
tab_options(table.font.size = 12)
m_entregas <-
entregas %>%
pivot_longer(cols = c(m1, m2, m3, m4, m5),
names_to = "milestone",
values_to = "previsto")
y_breaks <- m_entregas %>% distinct(status) %>% arrange(status) %>% pull() %>% as.POSIXct.Date()
m_entregas <-
entregas %>%
pivot_longer(cols = c(m1, m2, m3, m4, m5),
names_to = "milestone",
values_to = "previsto")
y_breaks <- m_entregas %>% distinct(status) %>% arrange(status) %>% pull() %>% as.Date()
m_labels <- m_entregas %>% filter(status <= min(status)) %>% mutate(status = as.Date(status - 2), previsto = as.Date(previsto + 3))
m_entregas %>%
ggplot(aes(x = previsto, y = status, group = milestone, colour = milestone)) +
geom_point() +
geom_line() +
geom_text(data = m_labels, aes(x = previsto, y = status, label = milestone)) +
scale_y_continuous(trans = c("date", "reverse2"), breaks = y_breaks, labels = scales::date_format()) +
labs(title = "Previs√£o das Entregas",
x = NULL,
y = NULL) +
theme_minimal() +
theme(
legend.position = "none",
plot.title = element_markdown(lineheight = 1.1),
axis.text.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(arrow = arrow(angle = 20, length = unit(0.1, "inches"), type = "closed"))
)
library(tidyverse)
library(showtext)
library(camcorder)
library(magick)
library(ggimage)
library(palmerpenguins)
#load fonts
font_add_google("Cinzel Decorative", "cinzel")
font_add_google("Roboto", "roboto")
showtext_auto()
showtext_auto()
# plot data
plot_data <-
penguins |>
count(species) |>
mutate(species = fct_reorder(species, n))
# Process images
# custom function to apply border to circle image with magick
# Code: https://github.com/tashapiro/tanya-data-viz/blob/main/spotify-artists/scripts/generate-image-labels.R
border <- function(im) {
ii <- magick::image_info(im)
ii_min <- min(ii$width, ii$height)
img <- magick::image_blank(width = ii_min, height = ii_min, color = "none")
drawing <- image_draw(img)
symbols(ii_min/2, ii_min/2, circles = ii_min/2, bg = 'white', inches = FALSE, add = TRUE)
dev.off()
x = image_composite(image_scale(drawing, "x430"), image_scale(im, "x400"), offset = "+15+15")
x
}
ggplot(data = plot_data) +
geom_segment(mapping = aes(x = 0,
xend = n,
y = species,
yend= species),
colour = "#f4f7f7",
size = 1) +
geom_image(mapping = aes(x = n,
y = species,
# image = paste0("posts/2023-01-25-ggimage/images/", species, ".png")),
image = paste0("images/", species, ".png")),
asp = 2,
size = 0.12,
image_fun = border) +
geom_text(mapping = aes(x = n + 16,
y = species,
label = species),
size = 9,
hjust = 0,
family = "roboto",
colour = "#f4f7f7") +
scale_y_discrete(limits = rev) +
scale_x_continuous(breaks = c(0, 50, 100, 150),
limits = c(-5, 250),
expand = c(0, 0)) +
labs(title = "PALMER PENGUINS",
subtitle = str_wrap(st, 70),
x = NULL,
y = NULL) +
theme(axis.text = element_text(family = "roboto",
size = 24,
lineheight = 0.4,
colour = "#f4f7f7"),
axis.text.y = element_blank(),
axis.title = element_text(family = "roboto",
size = 24,
lineheight = 0.4,
margin = margin(t = 10),
colour = "#f4f7f7"),
axis.ticks = element_blank(),
plot.subtitle = element_text(family = "roboto",
size = 18,
hjust = 0.5,
lineheight = 0.4,
margin = margin(b = 10),
colour = "#f4f7f7"),
plot.title = element_text(family = "cinzel",
size = 44,
hjust = 0.5,
margin = margin(b = 10),
colour = "#f4f7f7"),
plot.margin = margin(10, 10, 10, 10),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
plot.title.position = "plot",
panel.grid.major.x = element_line(linetype = "dashed",
colour = alpha("#bb8899", 0.3)),
plot.background = element_rect(fill = "#203d58", colour = "#203d58"),
panel.background = element_rect(fill = "#203d58", colour = "#203d58"))
st <- "Amount of penguins in the Palmer Penguins library dataset"
ggplot(data = plot_data) +
geom_segment(mapping = aes(x = 0,
xend = n,
y = species,
yend= species),
colour = "#f4f7f7",
size = 1) +
geom_image(mapping = aes(x = n,
y = species,
# image = paste0("posts/2023-01-25-ggimage/images/", species, ".png")),
image = paste0("images/", species, ".png")),
asp = 2,
size = 0.12,
image_fun = border) +
geom_text(mapping = aes(x = n + 16,
y = species,
label = species),
size = 9,
hjust = 0,
family = "roboto",
colour = "#f4f7f7") +
scale_y_discrete(limits = rev) +
scale_x_continuous(breaks = c(0, 50, 100, 150),
limits = c(-5, 250),
expand = c(0, 0)) +
labs(title = "PALMER PENGUINS",
subtitle = str_wrap(st, 70),
x = NULL,
y = NULL) +
theme(axis.text = element_text(family = "roboto",
size = 24,
lineheight = 0.4,
colour = "#f4f7f7"),
axis.text.y = element_blank(),
axis.title = element_text(family = "roboto",
size = 24,
lineheight = 0.4,
margin = margin(t = 10),
colour = "#f4f7f7"),
axis.ticks = element_blank(),
plot.subtitle = element_text(family = "roboto",
size = 18,
hjust = 0.5,
lineheight = 0.4,
margin = margin(b = 10),
colour = "#f4f7f7"),
plot.title = element_text(family = "cinzel",
size = 44,
hjust = 0.5,
margin = margin(b = 10),
colour = "#f4f7f7"),
plot.margin = margin(10, 10, 10, 10),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
plot.title.position = "plot",
panel.grid.major.x = element_line(linetype = "dashed",
colour = alpha("#bb8899", 0.3)),
plot.background = element_rect(fill = "#203d58", colour = "#203d58"),
panel.background = element_rect(fill = "#203d58", colour = "#203d58"))
# Process images
# custom function to apply border to circle image with magick
# Code: https://github.com/tashapiro/tanya-data-viz/blob/main/spotify-artists/scripts/generate-image-labels.R
border <- function(im) {
ii <- magick::image_info(im)
ii_min <- min(ii$width, ii$height)
img <- magick::image_blank(width = ii_min, height = ii_min, color = "none")
drawing <- image_draw(img)
symbols(ii_min/2, ii_min/2, circles = ii_min/2, bg = 'white', inches = FALSE, add = TRUE)
dev.off()
x = image_composite(image_scale(drawing, "x430"), image_scale(im, "x400"), offset = "+15+15")
x
}
#load fonts
font_add_google("Cinzel Decorative", "cinzel")
font_add_google("Roboto", "roboto")
showtext_auto()
# plot data
plot_data <-
penguins |>
count(species) |>
mutate(species = fct_reorder(species, n))
# Process images
# custom function to apply border to circle image with magick
# Code: https://github.com/tashapiro/tanya-data-viz/blob/main/spotify-artists/scripts/generate-image-labels.R
border <- function(im) {
ii <- magick::image_info(im)
ii_min <- min(ii$width, ii$height)
img <- magick::image_blank(width = ii_min, height = ii_min, color = "none")
drawing <- image_draw(img)
symbols(ii_min/2, ii_min/2, circles = ii_min/2, bg = 'white', inches = FALSE, add = TRUE)
dev.off()
x = image_composite(image_scale(drawing, "x430"), image_scale(im, "x400"), offset = "+15+15")
x
}
st <- "Amount of penguins in the Palmer Penguins library dataset"
ggplot(data = plot_data) +
geom_segment(mapping = aes(x = 0,
xend = n,
y = species,
yend= species),
colour = "#f4f7f7",
size = 1) +
geom_image(mapping = aes(x = n,
y = species,
# image = paste0("posts/2023-01-25-ggimage/images/", species, ".png")),
image = paste0("images/", species, ".png")),
asp = 2,
size = 0.12,
image_fun = border) +
geom_text(mapping = aes(x = n + 16,
y = species,
label = species),
size = 9,
hjust = 0,
family = "roboto",
colour = "#f4f7f7") +
scale_y_discrete(limits = rev) +
scale_x_continuous(breaks = c(0, 50, 100, 150),
limits = c(-5, 250),
expand = c(0, 0)) +
labs(title = "PALMER PENGUINS",
subtitle = str_wrap(st, 70),
x = NULL,
y = NULL) +
theme(axis.text = element_text(family = "roboto",
size = 24,
lineheight = 0.4,
colour = "#f4f7f7"),
axis.text.y = element_blank(),
axis.title = element_text(family = "roboto",
size = 24,
lineheight = 0.4,
margin = margin(t = 10),
colour = "#f4f7f7"),
axis.ticks = element_blank(),
plot.subtitle = element_text(family = "roboto",
size = 18,
hjust = 0.5,
lineheight = 0.4,
margin = margin(b = 10),
colour = "#f4f7f7"),
plot.title = element_text(family = "cinzel",
size = 44,
hjust = 0.5,
margin = margin(b = 10),
colour = "#f4f7f7"),
plot.margin = margin(10, 10, 10, 10),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
plot.title.position = "plot",
panel.grid.major.x = element_line(linetype = "dashed",
colour = alpha("#bb8899", 0.3)),
plot.background = element_rect(fill = "#203d58", colour = "#203d58"),
panel.background = element_rect(fill = "#203d58", colour = "#203d58"))
ggplot(data = plot_data) +
geom_segment(mapping = aes(x = 0,
xend = n,
y = species,
yend= species),
colour = "#f4f7f7",
size = 1) +
geom_image(mapping = aes(x = n,
y = species,
# image = paste0("posts/2023-01-25-ggimage/images/", species, ".png")),
image = paste0("images/", species, ".png")),
asp = 2,
size = 0.12,
image_fun = border) +
geom_text(mapping = aes(x = n + 16,
y = species,
label = species),
size = 9,
hjust = 0,
family = "roboto",
colour = "#f4f7f7") +
scale_y_discrete(limits = rev) +
scale_x_continuous(breaks = c(0, 50, 100, 150),
limits = c(-5, 250),
expand = c(0, 0)) +
labs(title = "PALMER PENGUINS",
subtitle = str_wrap(st, 70),
x = NULL,
y = NULL) +
theme(axis.text = element_text(family = "roboto",
size = 24,
lineheight = 0.4,
colour = "#f4f7f7"),
axis.text.y = element_blank(),
axis.title = element_text(family = "roboto",
size = 24,
lineheight = 0.4,
margin = margin(t = 10),
colour = "#f4f7f7"),
axis.ticks = element_blank(),
plot.subtitle = element_text(family = "roboto",
size = 18,
hjust = 0.5,
lineheight = 0.4,
margin = margin(b = 10),
colour = "#f4f7f7"),
plot.title = element_text(family = "cinzel",
size = 44,
hjust = 0.5,
margin = margin(b = 10),
colour = "#f4f7f7"),
plot.margin = margin(10, 10, 10, 10),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
plot.title.position = "plot",
panel.grid.major.x = element_line(linetype = "dashed",
colour = alpha("#bb8899", 0.3)),
plot.background = element_rect(fill = "#203d58", colour = "#203d58"),
panel.background = element_rect(fill = "#203d58", colour = "#203d58"))
ggplot(data = plot_data) +
geom_segment(mapping = aes(x = 0,
xend = n,
y = species,
yend= species),
colour = "#f4f7f7",
size = 1) +
geom_image(mapping = aes(x = n,
y = species,
image = paste0("posts/2023-01-25-ggimage/images/", species, ".png")),
#image = paste0("images/", species, ".png")),
asp = 2,
size = 0.12,
image_fun = border) +
geom_text(mapping = aes(x = n + 16,
y = species,
label = species),
size = 9,
hjust = 0,
family = "roboto",
colour = "#f4f7f7") +
scale_y_discrete(limits = rev) +
scale_x_continuous(breaks = c(0, 50, 100, 150),
limits = c(-5, 250),
expand = c(0, 0)) +
labs(title = "PALMER PENGUINS",
subtitle = str_wrap(st, 70),
x = NULL,
y = NULL) +
theme(axis.text = element_text(family = "roboto",
size = 24,
lineheight = 0.4,
colour = "#f4f7f7"),
axis.text.y = element_blank(),
axis.title = element_text(family = "roboto",
size = 24,
lineheight = 0.4,
margin = margin(t = 10),
colour = "#f4f7f7"),
axis.ticks = element_blank(),
plot.subtitle = element_text(family = "roboto",
size = 18,
hjust = 0.5,
lineheight = 0.4,
margin = margin(b = 10),
colour = "#f4f7f7"),
plot.title = element_text(family = "cinzel",
size = 44,
hjust = 0.5,
margin = margin(b = 10),
colour = "#f4f7f7"),
plot.margin = margin(10, 10, 10, 10),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
plot.title.position = "plot",
panel.grid.major.x = element_line(linetype = "dashed",
colour = alpha("#bb8899", 0.3)),
plot.background = element_rect(fill = "#203d58", colour = "#203d58"),
panel.background = element_rect(fill = "#203d58", colour = "#203d58"))
ggplot(data = plot_data) +
geom_segment(mapping = aes(x = 0,
xend = n,
y = species,
yend= species),
colour = "#f4f7f7",
size = 1) +
geom_image(mapping = aes(x = n,
y = species,
image = paste0("posts/2023-01-25-ggimage/images/", species, ".png")),
#image = paste0("images/", species, ".png")),
asp = 2,
size = 0.12,
image_fun = border) +
geom_text(mapping = aes(x = n + 16,
y = species,
label = species),
size = 9,
hjust = 0,
family = "roboto",
colour = "#f4f7f7") +
scale_y_discrete(limits = rev) +
scale_x_continuous(breaks = c(0, 50, 100, 150),
limits = c(-5, 250),
expand = c(0, 0)) +
labs(title = "PALMER PENGUINS",
subtitle = str_wrap(st, 70),
x = NULL,
y = NULL) +
theme(axis.text = element_text(family = "roboto",
size = 24,
lineheight = 0.4,
colour = "#f4f7f7"),
axis.text.y = element_blank(),
axis.title = element_text(family = "roboto",
size = 24,
lineheight = 0.4,
margin = margin(t = 10),
colour = "#f4f7f7"),
axis.ticks = element_blank(),
plot.subtitle = element_text(family = "roboto",
size = 18,
hjust = 0.5,
lineheight = 0.4,
margin = margin(b = 10),
colour = "#f4f7f7"),
plot.title = element_text(family = "cinzel",
size = 44,
hjust = 0.5,
margin = margin(b = 10),
colour = "#f4f7f7"),
plot.margin = margin(10, 10, 10, 10),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
plot.title.position = "plot",
panel.grid.major.x = element_line(linetype = "dashed",
colour = alpha("#bb8899", 0.3)),
plot.background = element_rect(fill = "#203d58", colour = "#203d58"),
panel.background = element_rect(fill = "#203d58", colour = "#203d58"))
ggplot(data = plot_data) +
geom_segment(mapping = aes(x = 0,
xend = n,
y = species,
yend= species),
colour = "#f4f7f7",
size = 1) +
geom_image(mapping = aes(x = n,
y = species,
image = paste0("posts/2023-01-25-ggimage/images/", species, ".png")),
#image = paste0("images/", species, ".png")),
asp = 2,
size = 0.12,
image_fun = border) +
geom_text(mapping = aes(x = n + 16,
y = species,
label = species),
size = 9,
hjust = 0,
family = "roboto",
colour = "#f4f7f7") +
scale_y_discrete(limits = rev) +
scale_x_continuous(breaks = c(0, 50, 100, 150),
limits = c(-5, 250),
expand = c(0, 0)) +
labs(title = "PALMER PENGUINS",
subtitle = str_wrap(st, 70),
x = NULL,
y = NULL) +
theme(axis.text = element_text(family = "roboto",
size = 24,
lineheight = 0.4,
colour = "#f4f7f7"),
axis.text.y = element_blank(),
axis.title = element_text(family = "roboto",
size = 24,
lineheight = 0.4,
margin = margin(t = 10),
colour = "#f4f7f7"),
axis.ticks = element_blank(),
plot.subtitle = element_text(family = "roboto",
size = 18,
hjust = 0.5,
lineheight = 0.4,
margin = margin(b = 10),
colour = "#f4f7f7"),
plot.title = element_text(family = "cinzel",
size = 44,
hjust = 0.5,
margin = margin(b = 10),
colour = "#f4f7f7"),
plot.margin = margin(10, 10, 10, 10),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
plot.title.position = "plot",
panel.grid.major.x = element_line(linetype = "dashed",
colour = alpha("#bb8899", 0.3)),
plot.background = element_rect(fill = "#203d58", colour = "#203d58"),
panel.background = element_rect(fill = "#203d58", colour = "#203d58"))
