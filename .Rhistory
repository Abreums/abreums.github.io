geom_vline(xintercept = mean(x), color = "blue") +
geom_vline(xintercept = 0.5, color = "red", linetype = "dashed") +
geom_text(aes(x = mean(x), y = 30, label = mean(x)))
medias |>
ggplot(aes(x = t50)) +
geom_histogram() +
geom_vline(xintercept = mean(x), color = "blue") +
geom_vline(xintercept = 0.5, color = "red", linetype = "dashed")+
geom_text(aes(x = mean(x), y = 30, label = mean(x)))
medias |>
ggplot(aes(x = t100)) +
geom_histogram() +
geom_vline(xintercept = mean(x), color = "blue") +
geom_vline(xintercept = 0.5, color = "red", linetype = "dashed") +
geom_text(aes(x = mean(x), y = 30, label = mean(x)))
medias |>
ggplot(aes(x = t200)) +
geom_histogram()+
geom_vline(xintercept = mean(x), color = "blue") +
geom_vline(xintercept = 0.5, color = "red", linetype = "dashed")+
geom_text(aes(x = mean(x), y = 30, label = mean(x)))
#| echo: fenced
#| warning: false
#| message: false
library(tidyverse)
#| echo: fenced
#| warning: false
#| message: false
library(tidyverse)
num = 100000
# criamos uma população de 1000 elementos distribuidos entre 0 e 1 uniformemente
populacao = tibble(elemento = runif(n = num))
populacao |>
ggplot() +
geom_histogram(aes(elemento),
bins = 20,
fill = "steelblue",
color = "white") +
theme_minimal() +
labs(title = "Histograma com 1.000 elementos com valores entre 0 até 1",
x = NULL,
y = NULL)
# 1k médias de amostras de tamanho 50
x1 <-
1:1000 %>%
map_dbl(~ sample(populacao$elemento, size = 50) |> mean())
# 1k médias de amostras de tamanho 100
x2 <-
1:1000 %>%
map_dbl(~ sample(populacao$elemento, size = 1000) |> mean())
x3 <-
1:1000 %>%
map_dbl(~ sample(populacao$elemento, size = 5000) |> mean())
medias <- tibble(
t50 = x1,
t100 = x2,
t200 = x3
)
medias |>
ggplot(aes(x = t50)) +
geom_histogram() +
geom_vline(xintercept = mean(x), color = "blue") +
geom_vline(xintercept = 0.5, color = "red", linetype = "dashed")+
geom_text(aes(x = mean(x), y = 30, label = mean(x)))
medias |>
ggplot(aes(x = t100)) +
geom_histogram() +
geom_vline(xintercept = mean(x), color = "blue") +
geom_vline(xintercept = 0.5, color = "red", linetype = "dashed") +
geom_text(aes(x = mean(x), y = 30, label = mean(x)))
medias |>
ggplot(aes(x = t200)) +
geom_histogram()+
geom_vline(xintercept = mean(x), color = "blue") +
geom_vline(xintercept = 0.5, color = "red", linetype = "dashed")+
geom_text(aes(x = mean(x), y = 30, label = mean(x)))
my_data = tibble(
size = c(50, 1000, 5000)
)
my_data <-
my_data |>
mutate(sample = map_dbl(1:1000, ~ sample(populacao$elemento, size = size) |> mean()))
my_data = tibble(
sample_size = c(50, 1000, 10000)
)
?sample
my_data <-
my_data |>
mutate(sample_data = map_dbl(1:500, ~ sample(populacao$elemento, size = sample_size)))
my_data = tibble(
sample_size = c(50, 1000, 10000)
)
my_data
my_data <-
my_data |>
mutate(sample_data = map_dfr(1:500, ~ sample(populacao$elemento, size = sample_size)))
my_data <-
my_data |>
mutate(sample_data = map(1:500, ~ sample(populacao$elemento, size = sample_size)))
sample(populacao$elemento, 1000)
my_data <-
my_data |>
mutate(sample_data = replicate(1000, sample(populacao$elemento, size = sample_size)))
?sample
my_data <-
my_data |>
mutate(sample_data = replicate(1000, { pop_sample = sample(populacao$elemento, size = sample_size) }))
my_data <-
my_data |>
mutate(sample_data = replicate(1000, { pop_sample = sample(populacao$elemento, size = 50) }))
populacao$elemento
sample(populacao$elemento, size = 10)
my_data <-
my_data |>
mutate(sample_data = sample(populacao$elemento, size = sample_size))
my_data = tibble(
sample_size = c(50, 1000, 10000)
)
my_data
my_data = tibble(
sample_size = as.integer(c(50, 1000, 10000))
)
my_data <-
my_data |>
mutate(sample_data = sample(populacao$elemento, size = sample_size))
my_data
?rep_sample_n
install.packages("moderndive")
moderndive::rep_sample_n(50)
moderndive::rep_sample_n(50)
?rep_sample_n
moderndive::rep_sample_n(populacao$elemento, 50)
moderndive::rep_sample_n(populacao, 50)
x <- replicate(10, runif(10))
x
class(x)
type(x)
x
my_data = tibble(
sample_size = as.integer(c(50, 1000, 10000))
)
sample(populacao, 50)
populacao
populacao$elemento
sample(populacao$elemento, 50)
my_data <-
my_data |>
mutate(sample_data = list(replicate(1000, sample(populacao$elemento, size = sample_size))))
my_data <-
my_data |>
mutate(sample_data = list(replicate(1000, sample(populacao$elemento, sample_size))))
my_data <-
my_data |>
mutate(sample_data = list(replicate(1000, ~ sample(populacao$elemento, sample_size) |> mean())))
View(my_data)
my_data <-
my_data |>
mutate(sample_data = replicate(1000, ~ sample(populacao$elemento, sample_size) |> mean()))
my_data <-
my_data |>
mutate(sample_data = list(replicate(1000, ~ sample(populacao$elemento, sample_size) |> mean())))
View(my_data)
my_data <-
my_data |>
mutate(sample_mean = tibble(replicate(1000, ~ sample(populacao$elemento, sample_size) |> mean())))
my_data <-
my_data |>
mutate(sample_mean = list(replicate(1000, ~ sample(populacao$elemento, sample_size) |> mean())))
my_data |>
ggplot(aes(x = sample_mean)) +
geom_histogram()
my_data |>
pluck(sample_mean)
my_data <-
my_data |>
mutate(sample_mean = list(replicate(1000, ~ sample(populacao$elemento, sample_size) |> mean())))
my_data
my_data |>
pluck(sample_mean)
my_data[1]$sample_mean
my_data[1]$sample_data
my_data = tibble(
sample_size = as.integer(c(50, 1000, 10000))
)
my_data <-
my_data |>
mutate(sample_mean = list(replicate(1000, ~ sample(populacao$elemento, sample_size) |> mean())))
my_data
my_data[sample_size == 50]$sample_mean
my_data[my_data$sample_size == 50]$sample_mean
my_data[my_data$sample_size == 50]
?replicate
1:2 |> map(sample(populacao$elemento, 50))
1:2 |> map_dbl(sample(populacao$elemento, 50))
1:2 |> map(sample(runif(1000), 5))
sample(runif(1000), 5)
sample_size = c(5, 10)
map(sample_size, sample(runif(1000), .x))
sample_size = c(5, 10)
map(sample_size, sample(runif(1000), .x))
map(sample_size, ~ sample(runif(1000), .x))
map(sample_size, ~ sample(runif(1000), .x)) |> mean()
map(sample_size, ~ sample(runif(1000), .x))
map(sample_size, ~ sample(runif(1000), .x) |> mean())
my_data = tibble(
sample_size = as.integer(c(50, 1000, 10000)),
num_of_samples = as.integer(c(50, 200, 500))
)
my_data <-
my_data |>
mutate(options = crossing(sample_size, num_of_samples))
?crossing
my_data <-
my_data |>
mutate(options = expand(nesting(sample_size, num_of_samples)))
my_data
View(my_data)
my_data <-
my_data |>
mutate(options = expand(sample_size, num_of_samples))
my_data <-
my_data |>
mutate()
fruits <- tibble(
type   = c("apple", "orange", "apple", "orange", "orange", "orange"),
year   = c(2010, 2010, 2012, 2010, 2011, 2012),
size  =  factor(
c("XS", "S",  "M", "S", "S", "M"),
levels = c("XS", "S", "M", "L")
),
weights = rnorm(6, as.numeric(size) + 2)
)
sample_size = c(5, 10)
fruits
map(sample_size, ~ sample(runif(1000), .x) |> mean())
combined_data <-
my_data |>
expand(sample_size, num_of_samples)
combined_data
sample(populacao$elemento, 50)
1:2 |> map(sample(populacao$elemento, 50))
1:2 |> map(~ sample(populacao$elemento, 50) |> mean())
x <- 1:2 |> map(~ sample(populacao$elemento, 50) |> mean())
x
x <- 1:2 |> map(~ sample(populacao$elemento, 50) |> mean()) |> unnest()
x <- c(1,2)
y <- c(2,3)
concatenate(x,y)
bind(x, y)
?bind
x+y
x|y
cbind(x,y)
rbind(x,y)
t(x,y)
?rbind
cbind(x,y)
c(x,y)
x <- 1:2 |> map(~ sample(populacao$elemento, 50) |> mean()) |> reduce(c)
x
combined_data <-
combined_data |>
mutate(sample_means = (1:num_of_samples |> map(~ sample(populacao$elemento, sample_size) |> mean())) |> reduce(c))
combined_data <-
combined_data |>
mutate(sample_means = c(map(1:num_of_samples,
~ sample(populacao$elemento,
sample_size) |>
mean()) |>
reduce(c)))
combined_data <-
combined_data |>
mutate(sample_means = (map(1:num_of_samples,
~ sample(populacao$elemento,
sample_size) |>
mean()) |>
reduce(c)))
combined_data <-
combined_data |>
mutate(sample_generated = map(1:num_of_samples,
~ sample(populacao$elemento,
sample_size)))
combined_data <-
combined_data |>
mutate(sample_generated = list(map(1:num_of_samples,
~ sample(populacao$elemento,
sample_size))))
combined_data
combined_data <-
combined_data |>
mutate(sample_generated = list(num_of_samples,
sample_size))
combined_data <-
combined_data |>
mutate(sample_generated = c(num_of_samples,
sample_size))
combined_data
combined_data |>
mutate(x <- 1:num_of_samples |> map(~ sample(populacao$elemento, sample_size) |> mean()) |> reduce(c))
computes_mean_of_samples <- function(a_vector, sample_size, num_of_samples) {
x <- 1:num_of_samples |>
map(~ sample(a_vector,
sample_size) |>
mean()) |>
reduce(c)
}
computes_mean_of_samples(populacao$elemento,
50,
2)
computes_mean_of_samples <- function(a_vector, sample_size, num_of_samples) {
1:num_of_samples |>
map(~ sample(a_vector,
sample_size) |>
mean()) |>
reduce(c)
}
computes_mean_of_samples(populacao$elemento,
50,
2)
computes_mean_of_samples(populacao$elemento,
50,
5)
computes_mean_of_samples(populacao$elemento,
100,
4)
computes_dist_of_means_of_samples <- function(a_vector, sample_size, num_of_samples) {
1:num_of_samples |>
map(~ sample(a_vector,
sample_size) |>
mean()) |>
reduce(c)
}
1:num_of_samples |>
map(~ sample(a_vector,
sample_size) |>
mean()) |>
reduce(c)
computes_dist_of_means_of_samples <- function(a_vector, sample_size, num_of_samples) {
1:num_of_samples |>
map(~ sample(a_vector,
sample_size) |>
mean()) |>
reduce(c)
}
computes_mean_of_samples(populacao$elemento,
100,
4)
combined_data |>
mutate(values = computes_dist_of_means_of_samples(populacao$elemento,
sample_size,
num_of_samples))
computes_dist_of_means_of_samples <- function(a_vector, sample_size, num_of_samples) {
1:num_of_samples |>
map(~ sample(a_vector,
sample_size) |>
mean()) |>
reduce(c) |>
list()
}
combined_data |>
mutate(values = computes_dist_of_means_of_samples(populacao$elemento,
sample_size,
num_of_samples))
computes_dist_of_means_of_samples(populacao$elemento,
10,
10)
computes_dist_of_means_of_samples <- function(a_vector, sample_size, num_of_samples) {
1:num_of_samples |>
map(~ sample(a_vector,
sample_size) |>
mean()) |>
reduce(c) |>
tibble()
}
computes_dist_of_means_of_samples(populacao$elemento,
10,
10)
computes_dist_of_means_of_samples <- function(a_vector, sample_size, num_of_samples) {
tibble(
val = 1:num_of_samples |>
map(~ sample(a_vector,
sample_size) |>
mean()) |>
reduce(c)
)
}
computes_dist_of_means_of_samples(populacao$elemento,
10,
10)
combined_data |>
mutate(values = computes_dist_of_means_of_samples(populacao$elemento,
sample_size,
num_of_samples))
computes_dist_of_means_of_samples(populacao$elemento,
10,
10)
combined_data |>
group_by(sample_size, num_of_samples) |>
summarise(values = computes_dist_of_means_of_samples(populacao$elemento,
sample_size,
num_of_samples))
combined_data <-
combined_data |>
group_by(sample_size, num_of_samples) |>
summarise(values = computes_dist_of_means_of_samples(populacao$elemento,
sample_size,
num_of_samples))
combined_data <-
combined_data |>
group_by(sample_size, num_of_samples) |>
summarise(values = computes_dist_of_means_of_samples(populacao$elemento,
sample_size,
num_of_samples),
mean_value = mean(values))
combined_data <-
combined_data |>
group_by(sample_size, num_of_samples) |>
summarise(values = computes_dist_of_means_of_samples(populacao$elemento,
sample_size,
num_of_samples))
combined_data <-
my_data |>
expand(sample_size, num_of_samples)
computes_dist_of_means_of_samples <- function(a_vector, sample_size, num_of_samples) {
tibble(
val = 1:num_of_samples |>
map(~ sample(a_vector,
sample_size) |>
mean()) |>
reduce(c)
)
}
combined_data <-
combined_data |>
group_by(sample_size, num_of_samples) |>
summarise(values = computes_dist_of_means_of_samples(populacao$elemento,
sample_size,
num_of_samples))
combined_data |>
ggplot(aes(x = values)) +
geom_histogram() +
facet_grid( sample_size ~ num_of_samples)
?facet_grid
combined_data |>
ggplot(aes(x = values)) +
geom_histogram() +
facet_grid(vars(sample_size),
vars(num_of_samples))
View(combined_data)
computes_dist_of_means_of_samples <- function(a_vector, sample_size, num_of_samples) {
1:num_of_samples |>
map(~ sample(a_vector,
sample_size) |>
mean()) |>
reduce(c)
}
combined_data <-
my_data |>
expand(sample_size, num_of_samples)
computes_dist_of_means_of_samples <- function(a_vector, sample_size, num_of_samples) {
1:num_of_samples |>
map(~ sample(a_vector,
sample_size) |>
mean()) |>
reduce(c)
}
combined_data <-
combined_data |>
group_by(sample_size, num_of_samples) |>
summarise(values = computes_dist_of_means_of_samples(populacao$elemento,
sample_size,
num_of_samples))
View(combined_data)
combined_data |>
ggplot(aes(x = values)) +
geom_histogram() +
facet_grid(vars(sample_size),
vars(num_of_samples))
?facet_grid
combined_data |>
ggplot(aes(x = values)) +
geom_histogram() +
facet_grid(sample_size ~ num_of_samples)
combined_data |>
ggplot(aes(x = values)) +
geom_histogram(full = "lightgray") +
facet_grid(sample_size ~ num_of_samples) +
labs(title = "Distribuições do valor médio de amostras para diferentes tamanhos de amostras e diferentes números de amostras coletados",
x = NULL,
y = NULL)
combined_data |>
ggplot(aes(x = values)) +
geom_histogram(fill = "lightgray") +
facet_grid(sample_size ~ num_of_samples) +
labs(title = "Distribuições do valor médio de amostras para diferentes tamanhos de amostras e diferentes números de amostras coletados",
x = NULL,
y = NULL)
combined_data |>
ggplot(aes(x = values)) +
geom_histogram(fill = "#668877") +
facet_grid(sample_size ~ num_of_samples) +
labs(title = "Distribuições do valor médio de amostras para diferentes tamanhos de amostras e diferentes números de amostras coletados",
x = NULL,
y = NULL)
combined_data |>
ggplot(aes(x = values)) +
geom_histogram(fill = "#668877") +
facet_grid(sample_size ~ num_of_samples) +
labs(title = "Distribuições do valor médio de amostras para diferentes tamanhos de amostras e diferentes números de amostras coletados",
x = NULL,
y = NULL) +
theme_minimal()
