`2007` = "<i style='color:#009E73'>2007</i>")
) +
labs(title = "Evolução Populacional de
<span style='color:#D55E00;'><i>1952</i></span> a
<span style='color:#009E73;'><i>2007</i></span>",
subtitle = "América do Sul",
x = NULL,
y = NULL,
fill = NULL) +
theme_minimal() +
theme(
legend.position = "none",
plot.title = element_markdown(lineheight = 1.1),
legend.text = element_markdown(size = 11),
axis.text.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank()
)
dumbbell_plot
ggsave("dumbbell.png")
ggplot(data.frame(x = c(-4, 4)), aes(x = x)) +
stat_function(fun = dnorm)
library(tidyverse)
ggplot(data.frame(x = c(-4, 4)), aes(x = x)) +
stat_function(fun = dnorm)
rnorm
?rnorm
#| echo: false
#| warning: false
#| error: false
#| message: false
library(tidyverse)
entregas <-
tibble(status = c(as.Date("2000-03-01"), as.Date("2000-03-15"),
as.Date("2000-04-01"), as.Date("2000-04-15"),
as.Date("2000-05-01"), as.Date("2000-05-15")),
m1 = c(as.Date("2000-03-10"), as.Date("2000-03-20"),
as.Date("2000-03-22"), NA, NA, NA),
m2 = c(as.Date("2000-03-25"), as.Date("2000-03-30"),
as.Date("2000-04-05"), as.Date("2000-04-10"), NA, NA),
m3 = c(as.Date("2000-03-31"), as.Date("2000-03-31"),
as.Date("2000-04-15"), as.Date("2000-04-20"),
as.Date("2000-04-25"), NA),
m4 = c(as.Date("2000-04-10"), as.Date("2000-04-10"),
as.Date("2000-04-22"), as.Date("2000-04-30"),
as.Date("2000-05-10"), as.Date("2000-05-25")),
m5 = c(as.Date("2000-04-30"), as.Date("2000-04-30"),
as.Date("2000-05-05"), as.Date("2000-05-20"),
as.Date("2000-05-30"), as.Date("2000-05-30"))
)
#| echo: false
#| warning: false
#| message: false
library(gt)
entregas %>%
filter(status == as.Date("2000-03-01")) %>%
gt() %>%
tab_header(title = "Planejamento de entregas") %>%
opt_align_table_header(align = "left") %>%
cols_label(
status = "Data de Status"
) %>%
tab_spanner(
label = c("Entregas"),
columns = c(m1, m2, m3, m4, m5)
) %>%
sub_missing() %>%
fmt_date(columns = c(status, m1, m2, m3, m4, m5),
date_style = "m_day_year") %>%
tab_options(table.font.size = 12)
#| label: tbl-status-1
#| echo: false
#| warning: false
#| message: false
#| tbl-cap: "Datas revistas após primeira reunião de acompanhamento"
library(gt)
entregas %>%
filter(status %in% as.Date(c("2000-03-01", "2000-03-15"))) %>%
gt() %>%
tab_header(title = "Planejamento de entregas") %>%
opt_align_table_header(align = "left") %>%
cols_label(
status = "Data de Status"
) %>%
tab_spanner(
label = c("Entregas"),
columns = c(m1, m2, m3, m4, m5)
) %>%
sub_missing() %>%
fmt_date(columns = c(status, m1, m2, m3, m4, m5),
date_style = "m_day_year") %>%
tab_options(table.font.size = 12)
#| echo: fenced
#| warning: false
#| message: false
# using the function from @Marcelo from this link
# https://stackoverflow.com/questions/43625341/reverse-datetime-posixct-data-axis-in-ggplot
# to invert the data axis:
library(scales) # for as.trans
library(ggtext) # for markdown
library(grid) # arrow
c_trans <- function(a, b, breaks = b$breaks, format = b$format) {
a <- as.trans(a)
b <- as.trans(b)
name <- paste(a$name, b$name, sep = "-")
trans <- function(x) a$trans(b$trans(x))
inv <- function(x) b$inverse(a$inverse(x))
trans_new(name, trans, inverse = inv, breaks = breaks, format=format)
}
rev_date <- c_trans("reverse", "time")
entregas <-
entregas %>%
filter(status %in% as.Date(c("2000-03-01", "2000-03-15"))) %>%
pivot_longer(cols = c(m1, m2, m3, m4, m5),
names_to = "milestone",
values_to = "previsto")
y_breaks <- entregas %>% distinct(status) %>% arrange(status) %>% pull() %>% as.POSIXct.Date()
m_labels <- entregas %>% filter(status <= min(status)) %>% mutate(status = as.POSIXct.Date(status - 2), previsto = as.POSIXct.Date(previsto + 3))
entregas %>%
mutate(status = as.POSIXct.Date(status),
previsto = as.POSIXct.Date(previsto)) %>%
ggplot(aes(x = previsto, y = status, group = milestone, colour = milestone)) +
geom_point() +
geom_line() +
geom_text(data = m_labels, aes(x = previsto, y = status, label = milestone)) +
scale_y_continuous(trans = rev_date, breaks = y_breaks, labels = scales::date_format()) +
labs(title = "Previsão das Entregas",
x = NULL,
y = NULL) +
theme_minimal() +
theme(
legend.position = "none",
plot.title = element_markdown(lineheight = 1.1),
axis.text.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(arrow = arrow(angle = 20, length = unit(0.1, "inches"), type = "closed"))
)
#| label: fig-1
#| echo: false
#| warning: false
#| message: false
#| fig-cap: "Evolução das datas previsas após primeira avaliação de status do projeto"
# using the function from @Marcelo from this link
# https://stackoverflow.com/questions/43625341/reverse-datetime-posixct-data-axis-in-ggplot
# to invert the data axis:
library(scales) # for as.trans
library(ggtext) # for markdown
library(grid) # arrow
c_trans <- function(a, b, breaks = b$breaks, format = b$format) {
a <- as.trans(a)
b <- as.trans(b)
name <- paste(a$name, b$name, sep = "-")
trans <- function(x) a$trans(b$trans(x))
inv <- function(x) b$inverse(a$inverse(x))
trans_new(name, trans, inverse = inv, breaks = breaks, format=format)
}
rev_date <- c_trans("reverse", "time")
entregas <-
entregas %>%
filter(status %in% as.Date(c("2000-03-01", "2000-03-15"))) %>%
pivot_longer(cols = c(m1, m2, m3, m4, m5),
names_to = "milestone",
values_to = "previsto")
entregas %>%
filter(status %in% as.Date(c("2000-03-01", "2000-03-15")))
#| echo: false
#| warning: false
#| error: false
#| message: false
library(tidyverse)
entregas <-
tibble(status = c(as.Date("2000-03-01"), as.Date("2000-03-15"),
as.Date("2000-04-01"), as.Date("2000-04-15"),
as.Date("2000-05-01"), as.Date("2000-05-15")),
m1 = c(as.Date("2000-03-10"), as.Date("2000-03-20"),
as.Date("2000-03-22"), NA, NA, NA),
m2 = c(as.Date("2000-03-25"), as.Date("2000-03-30"),
as.Date("2000-04-05"), as.Date("2000-04-10"), NA, NA),
m3 = c(as.Date("2000-03-31"), as.Date("2000-03-31"),
as.Date("2000-04-15"), as.Date("2000-04-20"),
as.Date("2000-04-25"), NA),
m4 = c(as.Date("2000-04-10"), as.Date("2000-04-10"),
as.Date("2000-04-22"), as.Date("2000-04-30"),
as.Date("2000-05-10"), as.Date("2000-05-25")),
m5 = c(as.Date("2000-04-30"), as.Date("2000-04-30"),
as.Date("2000-05-05"), as.Date("2000-05-20"),
as.Date("2000-05-30"), as.Date("2000-05-30"))
)
#| label: tbl-inicial
#| echo: false
#| warning: false
#| message: false
#| tbl-cap: "Planejamento inicial"
library(gt)
entregas %>%
filter(status == as.Date("2000-03-01")) %>%
gt() %>%
tab_header(title = "Planejamento de entregas") %>%
opt_align_table_header(align = "left") %>%
cols_label(
status = "Data de Status"
) %>%
tab_spanner(
label = c("Entregas"),
columns = c(m1, m2, m3, m4, m5)
) %>%
sub_missing() %>%
fmt_date(columns = c(status, m1, m2, m3, m4, m5),
date_style = "m_day_year") %>%
tab_options(table.font.size = 12)
#| label: tbl-status-1
#| echo: false
#| warning: false
#| message: false
#| tbl-cap: "Datas revistas após primeira reunião de acompanhamento"
library(gt)
entregas %>%
filter(status %in% as.Date(c("2000-03-01", "2000-03-15"))) %>%
gt() %>%
tab_header(title = "Planejamento de entregas") %>%
opt_align_table_header(align = "left") %>%
cols_label(
status = "Data de Status"
) %>%
tab_spanner(
label = c("Entregas"),
columns = c(m1, m2, m3, m4, m5)
) %>%
sub_missing() %>%
fmt_date(columns = c(status, m1, m2, m3, m4, m5),
date_style = "m_day_year") %>%
tab_options(table.font.size = 12)
#| label: tbl-status-1
#| echo: false
#| warning: false
#| message: false
#| tbl-cap: "Datas revistas após primeira reunião de acompanhamento"
library(gt)
entregas %>%
filter(status %in% as.Date(c("2000-03-01", "2000-03-15"))) %>%
gt() %>%
tab_header(title = "Planejamento de entregas") %>%
opt_align_table_header(align = "left") %>%
cols_label(
status = "Data de Status"
) %>%
tab_spanner(
label = c("Entregas"),
columns = c(m1, m2, m3, m4, m5)
) %>%
sub_missing() %>%
fmt_date(columns = c(status, m1, m2, m3, m4, m5),
date_style = "m_day_year") %>%
tab_options(table.font.size = 12)
#| label: fig-1
#| echo: false
#| warning: false
#| message: false
#| fig-cap: "Evolução das datas previsas após primeira avaliação de status do projeto"
# using the function from @Marcelo from this link
# https://stackoverflow.com/questions/43625341/reverse-datetime-posixct-data-axis-in-ggplot
# to invert the data axis:
library(scales) # for as.trans
library(ggtext) # for markdown
library(grid) # arrow
c_trans <- function(a, b, breaks = b$breaks, format = b$format) {
a <- as.trans(a)
b <- as.trans(b)
name <- paste(a$name, b$name, sep = "-")
trans <- function(x) a$trans(b$trans(x))
inv <- function(x) b$inverse(a$inverse(x))
trans_new(name, trans, inverse = inv, breaks = breaks, format=format)
}
rev_date <- c_trans("reverse", "time")
m_entregas <-
entregas %>%
filter(status %in% as.Date(c("2000-03-01", "2000-03-15"))) %>%
pivot_longer(cols = c(m1, m2, m3, m4, m5),
names_to = "milestone",
values_to = "previsto")
y_breaks <- m_entregas %>% distinct(status) %>% arrange(status) %>% pull() %>% as.POSIXct.Date()
m_labels <- m_entregas %>% filter(status <= min(status)) %>% mutate(status = as.POSIXct.Date(status - 2), previsto = as.POSIXct.Date(previsto + 3))
m_entregas %>%
mutate(status = as.POSIXct.Date(status),
previsto = as.POSIXct.Date(previsto)) %>%
ggplot(aes(x = previsto, y = status, group = milestone, colour = milestone)) +
geom_point() +
geom_line() +
geom_text(data = m_labels, aes(x = previsto, y = status, label = milestone)) +
scale_y_continuous(trans = rev_date, breaks = y_breaks, labels = scales::date_format()) +
labs(title = "Previsão das Entregas",
x = NULL,
y = NULL) +
theme_minimal() +
theme(
legend.position = "none",
plot.title = element_markdown(lineheight = 1.1),
axis.text.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(arrow = arrow(angle = 20, length = unit(0.1, "inches"), type = "closed"))
)
#| label: tbl-status-2
#| echo: false
#| warning: false
#| message: false
#| tbl-cap: "Datas revistas após segunda reunião de acompanhamento"
library(gt)
entregas %>%
filter(status %in% as.Date(c("2000-03-01", "2000-03-15", "2000-03-30"))) %>%
gt() %>%
tab_header(title = "Planejamento de entregas") %>%
opt_align_table_header(align = "left") %>%
cols_label(
status = "Data de Status"
) %>%
tab_spanner(
label = c("Entregas"),
columns = c(m1, m2, m3, m4, m5)
) %>%
sub_missing() %>%
fmt_date(columns = c(status, m1, m2, m3, m4, m5),
date_style = "m_day_year") %>%
tab_options(table.font.size = 12)
#| label: tbl-status-2
#| echo: false
#| warning: false
#| message: false
#| tbl-cap: "Datas revistas após segunda reunião de acompanhamento"
library(gt)
entregas %>%
filter(status %in% as.Date(c("2000-03-01", "2000-03-15", "2000-03-31"))) %>%
gt() %>%
tab_header(title = "Planejamento de entregas") %>%
opt_align_table_header(align = "left") %>%
cols_label(
status = "Data de Status"
) %>%
tab_spanner(
label = c("Entregas"),
columns = c(m1, m2, m3, m4, m5)
) %>%
sub_missing() %>%
fmt_date(columns = c(status, m1, m2, m3, m4, m5),
date_style = "m_day_year") %>%
tab_options(table.font.size = 12)
entregas
entregas
#| label: tbl-status-2
#| echo: false
#| warning: false
#| message: false
#| tbl-cap: "Datas revistas após segunda reunião de acompanhamento"
library(gt)
entregas %>%
filter(status %in% as.Date(c("2000-03-01", "2000-03-15", "2000-04-01"))) %>%
gt() %>%
tab_header(title = "Planejamento de entregas") %>%
opt_align_table_header(align = "left") %>%
cols_label(
status = "Data de Status"
) %>%
tab_spanner(
label = c("Entregas"),
columns = c(m1, m2, m3, m4, m5)
) %>%
sub_missing() %>%
fmt_date(columns = c(status, m1, m2, m3, m4, m5),
date_style = "m_day_year") %>%
tab_options(table.font.size = 12)
#| label: fig-2
#| echo: false
#| warning: false
#| message: false
#| fig-cap: "Evolução das datas previsas após segunda avaliação de status do projeto"
# using the function from @Marcelo from this link
# https://stackoverflow.com/questions/43625341/reverse-datetime-posixct-data-axis-in-ggplot
# to invert the data axis:
library(scales) # for as.trans
library(ggtext) # for markdown
library(grid) # arrow
c_trans <- function(a, b, breaks = b$breaks, format = b$format) {
a <- as.trans(a)
b <- as.trans(b)
name <- paste(a$name, b$name, sep = "-")
trans <- function(x) a$trans(b$trans(x))
inv <- function(x) b$inverse(a$inverse(x))
trans_new(name, trans, inverse = inv, breaks = breaks, format=format)
}
rev_date <- c_trans("reverse", "time")
m_entregas <-
entregas %>%
filter(status %in% as.Date(c("2000-03-01", "2000-03-15", "2000-04-01"))) %>%
pivot_longer(cols = c(m1, m2, m3, m4, m5),
names_to = "milestone",
values_to = "previsto")
y_breaks <- m_entregas %>% distinct(status) %>% arrange(status) %>% pull() %>% as.POSIXct.Date()
m_labels <- m_entregas %>% filter(status <= min(status)) %>% mutate(status = as.POSIXct.Date(status - 2), previsto = as.POSIXct.Date(previsto + 3))
m_entregas %>%
mutate(status = as.POSIXct.Date(status),
previsto = as.POSIXct.Date(previsto)) %>%
ggplot(aes(x = previsto, y = status, group = milestone, colour = milestone)) +
geom_point() +
geom_line() +
geom_text(data = m_labels, aes(x = previsto, y = status, label = milestone)) +
scale_y_continuous(trans = rev_date, breaks = y_breaks, labels = scales::date_format()) +
labs(title = "Previsão das Entregas",
x = NULL,
y = NULL) +
theme_minimal() +
theme(
legend.position = "none",
plot.title = element_markdown(lineheight = 1.1),
axis.text.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(arrow = arrow(angle = 20, length = unit(0.1, "inches"), type = "closed"))
)
#| label: tbl-status-n
#| echo: false
#| warning: false
#| message: false
#| tbl-cap: "Evolução das datas de entregas durante o projeto"
library(gt)
entregas %>%
gt() %>%
tab_header(title = "Planejamento de entregas") %>%
opt_align_table_header(align = "left") %>%
cols_label(
status = "Data de Status"
) %>%
tab_spanner(
label = c("Entregas"),
columns = c(m1, m2, m3, m4, m5)
) %>%
sub_missing() %>%
fmt_date(columns = c(status, m1, m2, m3, m4, m5),
date_style = "m_day_year") %>%
tab_options(table.font.size = 12)
#| label: fig-n
#| echo: false
#| warning: false
#| message: false
#| fig-cap: "Evolução das datas previsas"
# using the function from @Marcelo from this link
# https://stackoverflow.com/questions/43625341/reverse-datetime-posixct-data-axis-in-ggplot
# to invert the data axis:
library(scales) # for as.trans
library(ggtext) # for markdown
library(grid) # arrow
c_trans <- function(a, b, breaks = b$breaks, format = b$format) {
a <- as.trans(a)
b <- as.trans(b)
name <- paste(a$name, b$name, sep = "-")
trans <- function(x) a$trans(b$trans(x))
inv <- function(x) b$inverse(a$inverse(x))
trans_new(name, trans, inverse = inv, breaks = breaks, format=format)
}
rev_date <- c_trans("reverse", "time")
m_entregas <-
entregas %>%
pivot_longer(cols = c(m1, m2, m3, m4, m5),
names_to = "milestone",
values_to = "previsto")
y_breaks <- m_entregas %>% distinct(status) %>% arrange(status) %>% pull() %>% as.POSIXct.Date()
m_labels <- m_entregas %>% filter(status <= min(status)) %>% mutate(status = as.POSIXct.Date(status - 2), previsto = as.POSIXct.Date(previsto + 3))
m_entregas %>%
mutate(status = as.POSIXct.Date(status),
previsto = as.POSIXct.Date(previsto)) %>%
ggplot(aes(x = previsto, y = status, group = milestone, colour = milestone)) +
geom_point() +
geom_line() +
geom_text(data = m_labels, aes(x = previsto, y = status, label = milestone)) +
scale_y_continuous(trans = rev_date, breaks = y_breaks, labels = scales::date_format()) +
labs(title = "Previsão das Entregas",
x = NULL,
y = NULL) +
theme_minimal() +
theme(
legend.position = "none",
plot.title = element_markdown(lineheight = 1.1),
axis.text.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(arrow = arrow(angle = 20, length = unit(0.1, "inches"), type = "closed"))
)
#| echo: false
#| warning: false
#| error: false
#| message: false
library(tidyverse)
entregas <-
tibble(status = c(as.Date("2000-03-01"), as.Date("2000-03-15"),
as.Date("2000-04-01"), as.Date("2000-04-15"),
as.Date("2000-05-01"), as.Date("2000-05-15")),
m1 = c(as.Date("2000-03-10"), as.Date("2000-03-20"),
as.Date("2000-03-22"), NA, NA, NA),
m2 = c(as.Date("2000-03-25"), as.Date("2000-03-30"),
as.Date("2000-04-05"), as.Date("2000-04-10"), NA, NA),
m3 = c(as.Date("2000-03-31"), as.Date("2000-03-31"),
as.Date("2000-04-15"), as.Date("2000-04-20"),
as.Date("2000-04-25"), NA),
m4 = c(as.Date("2000-04-10"), as.Date("2000-04-10"),
as.Date("2000-04-22"), as.Date("2000-04-30"),
as.Date("2000-05-10"), as.Date("2000-05-25")),
m5 = c(as.Date("2000-04-30"), as.Date("2000-04-30"),
as.Date("2000-05-05"), as.Date("2000-05-20"),
as.Date("2000-05-30"), as.Date("2000-05-30"))
)
entregas
entregas |> glimpse()
