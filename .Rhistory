library(tidyverse)
BostonHousing2 %>% glimpse()
?BostonHousing2
BostonHousing2 %>%
ggplot(aes(x = medv, y = rm)) +
geom_point()
BostonHousing2 %>%
ggplot(aes(x = medv, y = rm)) +
geom_point() +
theme_minimal() +
labs(
x = "Preço médio das casas (1000 US)",
y = "Número médio de quartos por casa"
)
BostonHousing2 %>%
ggplot(aes(x = rm, y = medv)) +
geom_point() +
theme_minimal() +
labs(
x = "Número médio de quartos por casa",
y = "Preço médio das casas (1000 US)"
)
BostonHousing2 %>%
ggplot(aes(x = rm, y = medv)) +
geom_point() +
scale_y_continuous(expand = expansion(mult = c(0,0.1)))
BostonHousing2 %>%
ggplot(aes(x = rm, y = medv)) +
geom_point() +
scale_y_continuous(expand = expansion(mult = c(-1,0.1)))
BostonHousing2 %>%
ggplot(aes(x = rm, y = medv)) +
geom_point() +
scale_y_continuous(expand = expansion(mult = c(0,0.1)))
BostonHousing2 %>%
ggplot(aes(x = rm, y = medv)) +
geom_point()
?scale_y_continuous
BostonHousing2 %>%
ggplot(aes(x = rm, y = medv)) +
geom_point() +
scale_y_continuous(expand = expansion(mult = c(0.08,0.1)))
BostonHousing2 %>%
ggplot(aes(x = rm, y = medv)) +
geom_point() +
scale_y_continuous(expand = expansion(mult = c(0.1,0.1)))
BostonHousing2 %>%
ggplot(aes(x = rm, y = medv)) +
geom_point() +
scale_y_continuous(expand = expansion(add = 10))
BostonHousing2 %>%
ggplot(aes(x = rm, y = medv)) +
geom_point() +
scale_y_continuous(expand = expansion(add = 8))
BostonHousing2 %>%
ggplot(aes(x = rm, y = medv)) +
geom_point() +
scale_y_continuous(expand = expansion(mult = 0.1))
BostonHousing2 %>%
ggplot(aes(x = rm, y = medv)) +
geom_point()
BostonHousing2 %>%
ggplot(aes(x = rm, y = medv)) +
geom_point() +
scale_y_continuous(expand = expansion(mult = 0.1)) +
theme_minimal() +
labs(
x = "Número médio de quartos por casa",
y = "Preço médio das casas (1000 US)"
) +
theme(axis.ticks = element_blank(),
axis.title = element_blank(),
panel.grid.major.x = element_blank())
BostonHousing2 %>%
ggplot(aes(x = rm, y = medv)) +
geom_point() +
scale_y_continuous(expand = expansion(mult = 0.1)) +
theme_minimal() +
labs(
x = "Número médio de quartos por casa",
y = "Preço médio das casas (1000 US)"
) +
theme(axis.ticks = element_blank(),
axis.title = element_blank())
BostonHousing2 %>%
ggplot(aes(x = rm, y = medv)) +
geom_point() +
scale_y_continuous(expand = expansion(mult = 0.1)) +
theme_linedraw() +
labs(
x = "Número médio de quartos por casa",
y = "Preço médio das casas (1000 US)"
) +
theme(axis.ticks = element_blank(),
axis.title = element_blank())
BostonHousing2 %>%
ggplot(aes(x = rm, y = medv)) +
geom_point() +
scale_y_continuous(expand = expansion(mult = 0.1)) +
theme_linedraw() +
labs(
title = "Valor médio das casas pelo número de quartos"
) +
theme(axis.ticks = element_blank(),
axis.title = element_blank())
diamonds %>%
ggplot2(aes(x = carat, y = price)) +
geom_poin()
diamonds %>%
ggplot(aes(x = carat, y = price)) +
geom_poin()
diamonds %>%
ggplot(aes(x = carat, y = price)) +
geom_point()
diamonds %>%
ggplot(aes(x = log10(carat), y = price)) +
geom_point()
diamonds %>%
ggplot(aes(x = log10(carat), y = log10(price))) +
geom_point()
log10(1)
log10(0.4)
log10(2)
?seq
seq(from = 0, to = 100, by = 0.1)
tibble(x = seq((from = 0, to = 100, by = 0.1)), y = log10(x)) %>% ggplot(aes(x, y)) + geom_point()
tibble(x = seq((from = 0, to = 100, by = 0.1)), y = log10(x))
tibble(x = seq(from = 0, to = 100, by = 0.1), y = log10(x)) %>% ggplot(aes(x, y)) + geom_point()
tibble(x = seq(from = -10, to = 100, by = 0.1), y = log10(x)) %>% ggplot(aes(x, y)) + geom_point()
BostonHousing2 %>%
ggplot(aes(x = rm, y = medv)) +
geom_point(alpha = 0.2) +
scale_y_continuous(expand = expansion(mult = 0.1)) +
theme_linedraw() +
labs(
title = "Valor médio das casas pelo número de quartos"
) +
theme(axis.ticks = element_blank(),
axis.title = element_blank())
diamonds %>%
ggplot(aes(x = log10(carat), y = log10(price))) +
geom_point(alpha = 0.2) +
theme_linedraw()
BostonHousing2 %>%
ggplot(aes(x = rm, y = medv)) +
geom_point(alpha = 0.2) +
scale_y_continuous(expand = expansion(mult = 0.1)) +
theme_linedraw() +
labs(
title = "Valor médio das casas pelo número de quartos"
) +
theme(axis.ticks = element_blank(),
axis.title = element_blank())
diamonds %>%
ggplot(aes(x = log10(carat), y = log10(price))) +
geom_point(alpha = 0.2) +
theme_linedraw()
diamonds %>%
ggplot(aes(x = log10(carat), y = log10(price))) +
geom_point(alpha = 0.02) +
theme_linedraw()
runif(10)
filter(runif(10 > 0.95))
runif(10)
runif(10)[2]
runif(10)[, > 0.95]
x <- runif(10)
x
x[x > 0.95]
x[x > 0.95,]
x[,x > 0.95]
y <-  x > 0.95
y
x > 0.95
runif(10) > 0.95
runif(10) < 0.95
runif(10) < 0.95
runif(10) < 0.95
runif(10) < 0.95
runif(10) < 0.95
runif(10) < 0.95
runif(10) < 0.95
runif(10) < 0.95
runif(10)
runif(10) < 0.95
(runif(10) < 0.95) == TRUE
(runif(10) < 0.95) == TRUE
(runif(10) < 0.95) == TRUE
install.packages("Rcapture")
library(Rcapture)
bugs <- matrix(c(1,1,1,1,1,0,0,0,0,0,
0,0,1,0,1,1,1,0,0,0,
1,0,1,0,1,0,0,1,1,1),
ncol = 3)
closedp(bugs)
closedp(bugs)$glm$Mt
closedp(bugs)
?closedp
diamonds %>%
ggplot(aes(x = log10(carat), y = log10(price))) +
geom_hex() +
theme_linedraw()
diamonds %>%
ggplot(aes(x = log10(carat), y = log10(price))) +
geom_hex(bin = 50) +
theme_linedraw()
?diamonds
diamonds %>%
glimpse()
diamonds %>%
ggplot(aes(x = caract, y = price)) +
geom_hex() +
theme(minimal)
diamonds %>%
ggplot(aes(x = caract, y = price)) +
geom_hex() +
theme_minimal()
diamonds %>%
ggplot(aes(x = carat, y = price)) +
geom_hex() +
theme_minimal()
diamonds %>%
ggplot(aes(x = carat, y = price)) +
geom_hex() +
theme_minimal()
#| label: log-price-carat
#| fig-cap: "Logarítmo de preço e carat"
diamonds %>%
ggplot(aes(x = log10(carat), y = log10(price))) +
geom_hex(bin = 50) +
theme_linedraw()
?geom_hex
#| label: log-price-carat
#| fig-cap: "Logarítmo de preço e carat"
diamonds %>%
ggplot(aes(x = log10(carat), y = log10(price))) +
geom_hex(bins = 50) +
theme_linedraw()
#| label: log-price-carat
#| fig-cap: "Logarítmo de preço e carat"
diamonds %>%
ggplot(aes(x = log10(carat), y = log10(price))) +
geom_hex(bins = 100) +
theme_linedraw()
#| label: log-price-carat
#| fig-cap: "Logarítmo de preço e carat"
diamonds %>%
ggplot(aes(x = log10(carat), y = log10(price))) +
geom_hex(bins = 800) +
theme_linedraw()
#| label: log-price-carat
#| fig-cap: "Logarítmo de preço e carat"
diamonds %>%
ggplot(aes(x = log10(carat), y = log10(price))) +
geom_hex(bins = 80) +
theme_linedraw()
#| label: log-price-carat
#| fig-cap: "Logarítmo de preço e carat"
diamonds %>%
ggplot(aes(x = log10(carat), y = log10(price))) +
geom_hex(bins = 50) +
theme_linedraw()
lm_diamonds <- lm(log10(price) ~ log10(carat), data = diamonds)
summary(lm_diamonds)
plot(lm_diamonds)
plot(lm_diamonds)
plot(lm_diamonds, which = 1)
plot(lm_diamonds, which = 3)
```{r}
plot(lm_diamonds, which = 2)
install.packages("tidymodels")
install.packages("tidymodels")
library(tidyverse)
library(tidyverse)
library(tidymodels)
install.packages("tidymodel")
install.packages("tidymodels")
library(tidyverse)
library(tidymodels)
install.packages("lifecycle")
install.packages("lifecycle")
install.packages("lifecycle")
install.packages("lifecycle")
install.packages("lifecycle")
install.packages("lifecycle")
install.packages("lifecycle")
library(tidyverse)
library(tidymodels)
install.packages('performance')
library(performance)
lm_spec <-
linear_reg() %>%
set_model("regression") %>%
set_engine("lm")
lm_spec <-
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm")
lm_fit <- fit(lm_spec, price ~ carat, data = diamonds)
lm_fit %>%
summarise()
lm_fit %>%
summary()
lm_fit %>%
check_model()
lm_fit %>%
extract_fit_engine() %>%
check_heteroscedasticity()
library(tidymodels)
tidymodels_prefer()
?ames
#| echo: fenced
#| warning: false
#| message: false
ames %>%
glimpse()
ames %>%
ggplot(aes(x = Sale_Price)) +
geom_histogram(bins = 50, colour = "white")
ames %>%
ggplot(aes(x = Sale_Price)) +
geom_histogram(bins = 50, colour = "white") +
theme_light() +
scale_x_continuous(labels = scales::label_number())
ames %>%
ggplot(aes(x = Sale_Price)) +
geom_histogram(bins = 50, colour = "white") +
theme_light() +
scale_x_continuous(labels = scales::label_number()) +
geom_vline(xintercept = mean(ames$Sale_Price))
ames %>%
ggplot(aes(x = Sale_Price)) +
geom_histogram(bins = 50, colour = "white") +
theme_light() +
scale_x_continuous(labels = scales::label_number()) +
geom_vline(xintercept = mean(ames$Sale_Price),
colour = "green")
ames %>%
ggplot(aes(x = Sale_Price)) +
geom_histogram(bins = 50, colour = "white") +
theme_light() +
scale_x_continuous(labels = scales::label_number()) +
geom_vline(xintercept = mean(ames$Sale_Price),
colour = "green") +
geom_text(aes(x = mean(ames$Sale_Price), y = 350),
label = mean(ames$Sale_Price))
#| echo: fenced
#| warning: false
#| message: false
mean_price = mean(ames$Sale_Price)
?format
ames %>%
ggplot(aes(x = Sale_Price)) +
geom_histogram(bins = 50, colour = "white") +
theme_light() +
scale_x_continuous(labels = scales::label_number()) +
geom_vline(xintercept = mean_price,
colour = "green") +
geom_text(aes(x = mean_price, y = 350),
label = format(mean_price, digits = 0))
#| echo: fenced
#| warning: false
#| message: false
mean_price = mean(ames$Sale_Price)
ames %>%
ggplot(aes(x = Sale_Price)) +
geom_histogram(bins = 50, colour = "white") +
theme_light() +
scale_x_continuous(labels = scales::label_number()) +
geom_vline(xintercept = mean_price,
colour = "green") +
geom_text(aes(x = mean_price, y = 350),
label = format(mean_price, digits = 0))
format(mean_price, digits = 2)
format(mean_price)
format(mean_price, digitis = 5)
mean_price
format(13.7, nsmall = 3)
format(c(6.0, 13.1), digits = 2, nsmall = 1)
ames %>%
ggplot(aes(x = Sale_Price)) +
geom_histogram(bins = 50, colour = "white") +
theme_light() +
scale_x_continuous(labels = scales::label_number()) +
geom_vline(xintercept = mean_price,
colour = "green") +
geom_text(aes(x = mean_price, y = 350),
label = mean_price)
ames %>%
ggplot(aes(x = Sale_Price)) +
geom_histogram(bins = 50, colour = "white") +
theme_light() +
scale_x_continuous(labels = scales::label_number()) +
geom_vline(xintercept = mean_price,
colour = "green") +
geom_text(aes(x = mean_price, y = 350),
label = format(mean_price, digits = 2))
ames %>%
ggplot(aes(x = Sale_Price)) +
geom_histogram(bins = 50, colour = "white") +
theme_light() +
scale_x_continuous(labels = scales::label_number()) +
geom_vline(xintercept = mean_price,
colour = "green") +
geom_text(aes(x = (mean_price + 100000), y = 350),
label = format(mean_price, digits = 2))
ames %>%
ggplot(aes(x = Sale_Price)) +
geom_histogram(bins = 50, colour = "white") +
theme_light() +
scale_x_continuous(labels = scales::label_number()) +
geom_vline(xintercept = mean_price,
colour = "green") +
geom_text(aes(x = (mean_price + 80000), y = 350),
label = format(mean_price, digits = 2))
ames %>%
ggplot(aes(x = Sale_Price)) +
geom_histogram(bins = 50, colour = "white") +
theme_light() +
scale_x_continuous(labels = scales::label_number()) +
geom_vline(xintercept = mean_price,
colour = "green") +
geom_text(aes(x = (mean_price + 80000), y = 350),
label = format(mean_price, digits = 2),
colour = "green")
ames %>%
ggplot(aes(x = Sale_Price)) +
geom_histogram(bins = 50, colour = "white") +
theme_light() +
scale_x_continuous(labels = scales::label_number()) +
geom_vline(xintercept = mean_price,
colour = "green") +
geom_text(aes(x = (mean_price + 80000), y = 350),
label = format(mean_price, digits = 2),
colour = 0x646428)
ames %>%
ggplot(aes(x = Sale_Price)) +
geom_histogram(bins = 50, colour = "white") +
theme_light() +
scale_x_continuous(labels = scales::label_number()) +
geom_vline(xintercept = mean_price,
colour = "green") +
geom_text(aes(x = (mean_price + 80000), y = 350),
label = format(mean_price, digits = 2),
colour = 0x886428)
colour = #886428)
ames %>%
ggplot(aes(x = Sale_Price)) +
geom_histogram(bins = 50, colour = "white") +
theme_light() +
scale_x_continuous(labels = scales::label_number()) +
geom_vline(xintercept = mean_price,
colour = "darkblue") +
geom_text(aes(x = (mean_price + 80000), y = 350),
label = format(mean_price, digits = 2),
colour = "darkblue")
ames %>%
ggplot(aes(x = Sale_Price)) +
geom_histogram(bins = 50, colour = "white") +
theme_light() +
scale_x_continuous(labels = scales::label_number()) +
geom_vline(xintercept = mean_price,
colour = "darkblue") +
geom_text(aes(x = (mean_price + 80000), y = 350),
label = format(mean_price, digits = 2),
colour = "darkblue")
min_price = min(ames$Sale_Price)
São 10 variáveis de 54 mil diamantes incluindo preço, cor, carat (medida de peso), qualidade do corte, etc.
min_price = min(ames$Sale_Price)
print(min_price)
print(mean_price)
print(max(ames$Sale_Price))
```{r}
print(min(ames$Sale_Price))
print(mean_price)
print(max(ames$Sale_Price))
print(median(ames$Sale_Price))
ames %>%
ggplot(aes(x = Sale_Price)) +
geom_histogram(bins = 50, colour = "white") +
theme_light() +
scale_x_continuous(labels = scales::label_number())
ames %>%
ggplot(aes(x = Sale_Price)) +
geom_histogram(bins = 50, colour = "white") +
theme_light() +
scale_x_continuous(labels = scales::label_number())
ames %>%
ggplot(aes(x = Sale_Price)) +
geom_histogram(bins = 50, colour = "white") +
theme_light() +
scale_x_log10() +
scale_x_continuous(labels = scales::label_number())
ames %>%
ggplot(aes(x = Sale_Price)) +
geom_histogram(bins = 50, colour = "white") +
theme_light() +
scale_x_log10()
?scale_x_log10
ames %>%
ggplot(aes(x = Sale_Price)) +
geom_histogram(bins = 50, colour = "white") +
theme_light() +
scale_x_log10(labels = scales::comma_format(scale = 1))
ames %>%
ggplot(aes(x = Sale_Price)) +
geom_histogram(bins = 50, colour = "white") +
theme_light() +
scale_x_log10(labels = scales::comma_format())
ames_log <-
ames %>%
mutate(Sale_Price = log10(Sale_Price))
