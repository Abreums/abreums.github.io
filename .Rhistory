quarto -version
quarto_path()
quarto_version()
library(quarto)
quarto_version()
files_list <- list.files(path = ".",
pattern = "^plan*.xlsx",
full.names = TRUE)
files_list
files_list <- list.files(path = ".",
pattern = "^plan(.)*.xlsx",
full.names = TRUE)
files_list
df <-
files_list %>%
map(read_excel) %>%
reduce(bind_rows)
library(tidyverse)
files_list <- list.files(path = ".",
pattern = "^plan(.)*.xlsx",
full.names = TRUE)
library(tidyverse)
files_list <- list.files(path = ".",
pattern = "^plan(.)*.xlsx",
full.names = TRUE)
install.packages("tidyverse")
files_list <- list.files(path = ".",
pattern = "^plan(.)*.xlsx",
full.names = TRUE)
df <-
files_list %>%
map(read_excel) %>%
reduce(bind_rows)
library(tidyverse)
files_list <- list.files(path = ".",
pattern = "^plan(.)*.xlsx",
full.names = TRUE)
df <-
files_list %>%
map(read_excel) %>%
reduce(bind_rows)
library(readxl)
files_list <- list.files(path = ".",
pattern = "^plan(.)*.xlsx",
full.names = TRUE)
install.packages(readxl)
files_list <- list.files(path = ".",
pattern = "^plan(.)*.xlsx",
full.names = TRUE)
install.packages("readxl")
install.packages("readxl")
install.packages("readxl")
library(tidyverse)
library(tidyverse)
library(readxl)
files_list <- list.files(path = ".",
pattern = "^plan(.)*.xlsx",
full.names = TRUE)
df <-
files_list %>%
map(read_excel) %>%
reduce(bind_rows)
df
source("~/.active-rstudio-document", echo=TRUE)
?rchisq
rchisq(3)
dchisq(n= 10, df =12)
rchisq(n= 10, df =12)
Y_tilde <- function(y) {
(1/1-length(y))*sum(y)
}
x <- c(1,2,3)
Y_tilde(x)
}
x <- c(1,2,3)
Y_tilde(x)
n=length(x)
n
(1/(length(x)-1)
(1/(length(x)-1))
(1/(length(x)-1))
(1/(length(x)-1))*sum(x)
Y_tilde <- function(y) {
(1/(length(y)-1))*sum(y)
}
x <- c(1,2,3)
Y_tilde(x)
observations <- rnorm(5, mean = 10, sqrt(25))
observations
Y_tilde(observations)
# repeat 10000 times
observ <- replicate(10000, Y_tilde(rnorm(5, mean = 10, sqrt(25))))
observ
observ[1]
observations
Y_tilde(observations)
# repeat 10000 times
est_bias <- replicate(10000, Y_tilde(rnorm(5, mean = 10, sqrt(25))))
hist(est_bias)
abline(v=10, add = TRUE)
# repeat 10000 times
est_bias <- replicate(10000, Y_tilde(rnorm(5, mean = 10, sqrt(25))))
hist(est_bias)
abline(v=10)
abline(v=10, add=TRUE)
abline(v=10, col = "red")
hist(est_bias)
abline(v=10, col = "red")
# repeat 10000 times
set.seed(123)
est_bias <- replicate(10000, Y_tilde(rnorm(5, mean = 10, sqrt(25))))
hist(est_bias)
abline(v=10, col = "red")
ab_line(v=10, col = "red")
hist(est_bias)
abline(v = 10, col = "red")
plot.new()
hist(est_bias)
abline(v = 10, col = "red")
hist(est_bias)
abline(v = 10, col = "red")
hist(est_bias) +
abline(v = 10, col = "red")
hist(est_bias) + abline(v = 10, col = "red")
hist(est_bias) + abline(v = 10, col = "red")
abline(v = 10, col = "red")
hist(est_bias)
?abline
plot(c(-2,3), c(-1,5), type = "n", xlab = "x", ylab = "y", asp = 1)
## the x- and y-axis, and an integer grid
abline(h = 0, v = 0, col = "gray60")
plot(c(-2,3), c(-1,5), type = "n", xlab = "x", ylab = "y", asp = 1)
## the x- and y-axis, and an integer grid
abline(h = 0, v = 0, col = "gray60")
text(1,0, "abline( h = 0 )", col = "gray60", adj = c(0, -.1))
abline(h = -1:5, v = -2:3, col = "lightgray", lty = 3)
abline(a = 1, b = 2, col = 2)
text(1,3, "abline( 1, 2 )", col = 2, adj = c(-.1, -.1))
plot(c(-2,3), c(-1,5), type = "n", xlab = "x", ylab = "y", asp = 1)
## the x- and y-axis, and an integer grid
abline(h = 0, v = 0, col = "gray60")
text(1,0, "abline( h = 0 )", col = "gray60", adj = c(0, -.1))
abline(h = -1:5, v = -2:3, col = "lightgray", lty = 3)
abline(a = 1, b = 2, col = 2)
text(1,3, "abline( 1, 2 )", col = 2, adj = c(-.1, -.1))
hist(est_bias)
abline(v = 10, col = "red")
hist(est_bias)
abline(v = 10, col = "red")
hist(est_bias)
abline(v = 10, col = "red")
hist(est_bias)
abline(v = 10, col = "red")
hist(est_bias)
abline(v = 10, col = "red")
hist(est_bias)
abline(v = 10, col = "red")
df <- tibble(est_bias = est_bias)
library(tidyverser)
library(tidyverse)
df <- tibble(est_bias = est_bias)
df %>%
ggplot(aes(y = est_bias)) +
geom_histogram()
df %>%
ggplot(aes(y = est_bias)) +
geom_histogram()
df %>%
ggplot(aes(x = est_bias)) +
geom_histogram()
df %>%
ggplot(aes(x = est_bias)) +
geom_histogram() +
geom_vline(xintercept = 10)
df %>%
ggplot(aes(x = est_bias)) +
geom_histogram() +
geom_vline(xintercept = 10, color = "red")
# repeat 10000 times para amostras de tamanho 1000
set.seed(123)
est_bias <- replicate(10000, Y_tilde(rnorm(1000, mean = 10, sqrt(25))))
df <- tibble(est_bias = est_bias)
df %>%
ggplot(aes(x = est_bias)) +
geom_histogram() +
geom_vline(xintercept = 10, color = "red")
w = rep((1+0.5)/100)
w
w = rep((1+0.5)/n, n/2) + rep((1-0.5)/n, n/2)
w
w = rep((1+0.5)/n, n/2), rep((1-0.5)/n, n/2)
w
rep((1+0.5)/n, n/2)
w = c(rep((1+0.5)/n, n/2), rep((1-0.5)/n, n/2))
w
re(2,2)
rep(3,2)
n = 100
(1+0.5)/n
rep((1+0.5)/n, n/2)
(1-0.5)
(1-0.5)/n
(1+0.5)/n
w = c(rep((1+0.5)/n, n/2), rep((1-0.5)/n, n/2))
w
y_tilde1 <- function(y) {
(1/length(y))*sum(y)
}
set.seed(123)
est_bias <- replicate(10000, y_tilde1(rnorm(1000, mean = 10, sqrt(25))))
est_bias
df <- tibble(est_bias = est_bias)
df %>%
ggplot(aes(x = est_bias)) +
geom_histogram() +
geom_vline(xintercept = 10, color = "red")
est_bias <- replicate(10000, y_tilde1(rnorm(100, mean = 10, sqrt(25))))
df <- tibble(est_bias = est_bias)
df %>%
ggplot(aes(x = est_bias)) +
geom_histogram() +
geom_vline(xintercept = 10, color = "red")
y_tilde2 <- function(y) {
sum(w*y)
}
set.seed(123)
est_bias <- replicate(10000, y_tilde1(rnorm(100, mean = 10, sqrt(25))))
df <- tibble(est_bias = est_bias)
df %>%
ggplot(aes(x = est_bias)) +
geom_histogram() +
geom_vline(xintercept = 10, color = "red")
est_bias <- replicate(10000, y_tilde2(rnorm(100, mean = 10, sqrt(25))))
df <- tibble(est_bias = est_bias)
df %>%
ggplot(aes(x = est_bias)) +
geom_histogram() +
geom_vline(xintercept = 10, color = "red")
w = c(rep((1+0.5)/n, n/2), rep((1-0.5)/n, n/2))
sum(w)
w
w = c(rep((1+0.5)/n, n/2), rep((0.5)/n, n/2))
w
sum(w)
w = c(rep((1+0.5)/n, n/2), rep((0.5)/n, n/2))
sum(w)
50*0.005
50*0.015
w = c(rep(1/n, n/2), rep((0.5)/n, n/2))
w
50*0.010
sum(w)
y_tilde2 <- function(y) {
sum(w*y)
}
est_bias <- replicate(10000, y_tilde2(rnorm(100, mean = 5, sqrt(10))))
df <- tibble(est_bias = est_bias)
df %>%
ggplot(aes(x = est_bias)) +
geom_histogram() +
geom_vline(xintercept = 10, color = "red")
y_tilde1 <- function(y) {
(1/length(y))*sum(y)
}
est_bias <- replicate(10000, y_tilde1(rnorm(100, mean = 5, sqrt(10))))
df <- tibble(est_bias = est_bias)
df %>%
ggplot(aes(x = est_bias)) +
geom_histogram() +
geom_vline(xintercept = 10, color = "red")
df <- tibble(est_bias = est_bias)
df %>%
ggplot(aes(x = est_bias)) +
geom_histogram() +
geom_vline(xintercept = 10, color = "red")
y_tilde1 <- function(y) {
(1/length(y))*sum(y)
}
set.seed(123)
est_bias <- replicate(10000, y_tilde1(rnorm(100, mean = 5, sqrt(10))))
df <- tibble(est_bias = est_bias)
df %>%
ggplot(aes(x = est_bias)) +
geom_histogram() +
geom_vline(xintercept = 10, color = "red")
df %>%
ggplot(aes(x = est_bias)) +
geom_histogram() +
geom_vline(xintercept = 5, color = "red")
w = c(rep((1+0.5)/n, n/2), rep(((1-0.5)/n, n/2))
w
w = c(rep((1+0.5)/n, n/2), rep((1-0.5)/n, n/2))
w
50*0.015
50*0.005
sum(w)
x <- c(1,2)
y <- (2,4)
y <- c(2,4)
x*y
y_tilde2 <- function(y) {
sum(w*y)
}
est_bias <- replicate(10000, y_tilde2(rnorm(100, mean = 5, sqrt(10))))
df <- tibble(est_bias = est_bias)
df %>%
ggplot(aes(x = est_bias)) +
geom_histogram() +
geom_vline(xintercept = 5, color = "red")
w = c(rep((1)/n, n/2), rep((0.5)/n, n/2))
w
50*0.1
50*0.005
50*0.01
w = c(rep((1)/n, n/2), rep((0.5)/n, n/2))
y_tilde2 <- function(y) {
sum(w*y)
}
est_bias <- replicate(10000, y_tilde2(rnorm(100, mean = 5, sqrt(10))))
df <- tibble(est_bias = est_bias)
df %>%
ggplot(aes(x = est_bias)) +
geom_histogram() +
geom_vline(xintercept = 5, color = "red")
var(est_bias)
est_bar1 <- replicate(10000, y_tilde1(rnorm(100, mean = 5, sqrt(10))))
df <- tibble(est_bias = est_bias)
df %>%
ggplot(aes(x = est_bias)) +
geom_histogram() +
geom_vline(xintercept = 5, color = "red")
var(est_bar1)
est_tilde2 <- replicate(10000, y_tilde2(rnorm(100, mean = 5, sqrt(10))))
df <- tibble(est_bias = est_bias)
y_tilde2 <- function(y) {
sum(w*y)
}
w = c(rep((1+0.5)/n, n/2), rep((1-0.5)/n, n/2))
y_tilde2 <- function(y) {
sum(w*y)
}
est_tilde2 <- replicate(10000, y_tilde2(rnorm(100, mean = 5, sqrt(10))))
df <- tibble(est_bias = est_bias)
df %>%
ggplot(aes(x = est_bias)) +
geom_histogram() +
geom_vline(xintercept = 5, color = "red")
w = c(rep((1+0.5)/n, n/2), rep((1-0.5)/n, n/2))
w
y_tilde2 <- function(y) {
sum(w*y)
}
est_tilde2 <- replicate(10000, y_tilde2(rnorm(100, mean = 5, sqrt(10))))
df <- tibble(est_bias = est_bias)
df <- tibble(est_bias = est_tilde2)
df <- tibble(est_bias = est_bar1)
df %>%
ggplot(aes(x = est_bias)) +
geom_histogram() +
geom_vline(xintercept = 5, color = "red")
var(est_bar1)
df %>%
ggplot(aes(x = est_bias)) +
geom_histogram() +
geom_vline(xintercept = 5, color = "red")
var(est_bar1)
n = 100
w = c(rep((1)/n, n/2), rep((0.5)/n, n/2))
y_tilde2 <- function(y) {
sum(w*y)
}
est_bias <- replicate(10000, y_tilde2(rnorm(100, mean = 5, sqrt(10))))
df <- tibble(est_bias = est_tilde2)
df %>%
ggplot(aes(x = est_bias)) +
geom_histogram() +
geom_vline(xintercept = 5, color = "red")
est_tilde2 <- replicate(10000, y_tilde2(rnorm(100, mean = 5, sqrt(10))))
df <- tibble(est_bias = est_tilde2)
df %>%
ggplot(aes(x = est_bias)) +
geom_histogram() +
geom_vline(xintercept = 5, color = "red")
var(est_bias)
var(est_tilde2)
n = 100
w = c(rep((1+0.5)/n, n/2), rep((1-0.5)/n, n/2))
y_tilde2 <- function(y) {
sum(w*y)
}
est_tilde2 <- replicate(10000, y_tilde2(rnorm(100, mean = 5, sqrt(10))))
df <- tibble(est_bias = est_tilde2)
df %>%
ggplot(aes(x = est_bias)) +
geom_histogram() +
geom_vline(xintercept = 5, color = "red")
var(est_tilde2)
df %>%
ggplot(aes(x = est_bias)) +
geom_histogram() +
geom_vline(xintercept = 5, color = "red")
?replicate
??cps
library(readxl)
library(tidyverse)
cps <- read_excel("https://wps.pearsoned.com/wps/media/objects/11422/11696965/datasets3e/datasets/cps_ch3.xlsx")
cps <- read_excel("https://wps.pearsoned.com/wps/media/objects/11422/11696965/datasets3e/datasets/cps_ch3.xlsx")
cps <- read_excel(path = "https://wps.pearsoned.com/wps/media/objects/11422/11696965/datasets3e/datasets/cps_ch3.xlsx")
cps <- read_excel(path = "~/Downloads/cps_ch3.xlsx")
cps
?tstat
tstat <- (mean(cps$ahe08) - 23.5)/(var(cps$ahe08)/sqrt(length(cps$ahe08)))
tstat
tstat <- (mean(cps$ahe08) - 23.5)/(sd(cps$ahe08)/sqrt(length(cps$ahe08)))
tstat
sqrt(length(cps$ahe08))
(sd(cps$ahe08)
sd(cps$ahe08)
mean(cps$ahe08)
(sd(cps$ahe08)/sqrt(length(cps$ahe08)))
tstat <- (mean(cps$ahe08) - 23.5)/(sd(cps$ahe08)/sqrt(length(cps$ahe08)))
tstat
# use tstat to accept or reject the null
pnorm(q = 1)
# use tstat to accept or reject the null
pnorm(q = 1, mean = 1, sd = 2)
# use tstat to accept or reject the null
qnorm(0.5, mean = 1, sd = 2)
# use tstat to accept or reject the null
dnorm(1, mean = 1, sd = 2)
# use tstat to accept or reject the null
qnorm(0.95)
tstat
# use tstat to accept or reject the null
tstat > qnorm(0.95)
qnorm(0.95)
pnorm(tstat)
(1 - pnorm(tstat)) < 0.05
1 - pnorm(tstat) < 0.05
pval= 1 - pnorm(tstat)
pval < 0.05
t.test(cps$ahe08, alternative = "greater", mu = 23.5)
cps %>%
ggplot(aes(x = ahe08)) +
geom_histogram()
t.test(cps$ahe08, alternative = "greater", mu = 23.5)
tstat <- t.test(cps$ahe08, alternative = "greater", mu = 23.5)$statistic
tstat
tstat <- t.test(cps$ahe08, alternative = "greater", mu = 23.5)$pvalue
pvalue <- t.test(cps$ahe08, alternative = "greater", mu = 23.5)$pvalue
pvalue
pvalue <- t.test(cps$ahe08, alternative = "greater", mu = 23.5)$p.value
pvalue
pvalue - pval
install.packages("ismev")
library(ismev)
portpirie <- data("portpirie")
fremantle <- data("fremantle")
t.test(portpirie, fremantle)
portpirie <- data("portpirie")
fremantle <- data("fremantle")
portpirie
data("portpirie")
portpirie <- data(portpirie)
portpirie
data(portpirie)
data("portpirie")
portpirie
data("fremantle")
t.test(portpirie, fremantle)
